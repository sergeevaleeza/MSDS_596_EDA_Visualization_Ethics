{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of MSDS 596 - Week 3 - Lab","provenance":[{"file_id":"13De9VsDmX6W4in7e6D-Eqzb3rf3Ks5HN","timestamp":1633935880473}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"g8Hf3j18KEZ3"},"source":["# Lab Overview\n","\n","**Remember to create a copy of this notebook for your own purposes so that any work that you do is saved to your personal copy of this lab**\n","\n","In this lab, we'll be loading in FAA data around aircraft wildlife strikes from 1990-2015 using `pandas` and doing some initial data exploration to answer some questions about the data set."]},{"cell_type":"code","metadata":{"id":"7pItSCyakZeI"},"source":["import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7aozEL0dKn_I"},"source":["## Preparation\n","\n","Steps:\n","\n","\n","1.   Download the data set `wildlifestrikes.csv` from Canvas Module 2.  It is ~36MB so may take a minute or two.\n","2.   Upload this file into your own Google Drive.  For convenience, you may consider creating a single folder to store all of your data sets.\n","3.   Connect your CoLab notebook to your Google Drive using the Folder icon on the left side of the screen\n","4.   Find `wildlifestrikes.csv` from within your Google Drive and right click on it to \"Copy Path\"\n","5.   If you haven't already in the pre-prep above, import `pandas` in the code section below\n","6.   Load the dataset using `pandas` into a dataframe called `strikes_raw`.  Set `low_memory=False` and `index_col='Record ID'`.\n","\n"]},{"cell_type":"code","metadata":{"id":"U3te51i_Km1X"},"source":["# Write your code below"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"45sx7OI3ih3m"},"source":["### Questions about the data set\n","\n","\n","\n","1.   How many rows are in this dataset?\n","2.   How many columns are in this dataset?\n","3.   What are the column names? (Use `.columns`)\n","4.   Output the first 10 rows of the `strikes_raw` dataframe.\n","\n"]},{"cell_type":"code","metadata":{"id":"09lopSphVXua"},"source":["# Write your code and answers below"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZDS9M2xQ0MEj"},"source":["## Data Cleaning\n","\n","More often than not, data doesn't come exactly the way we want it for analysis purposes.  There are a number of different steps and techniques that can be used to clean and prepare the data in order to make it suitable for data analysis.  Let's practice a couple of them here.\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"JvDb-LYDn7Zr"},"source":["### Reduce the data set to only columns you need\n","\n","Let's say that for the purposes of this analysis, we don't need the data on engines or on specific damage to the aircraft.  We can thus remove the columns related to this data and reduce the noise in our dataset.  Create a new dataframe `strikes` with only the columns listed below. \n","\n","Do this by either dropping the columns not listed below, or by specifically selecting the columns listed below from the original `strikes_raw` dataframe.\n","\n","Use `.copy()` or `inplace=False` to explicitly create a copy of the dataframe.\n","\n","```\n","'Incident Year', 'Incident Month', 'Incident Day', 'Operator ID',\n","'Operator', 'Aircraft', 'Aircraft Type', 'Aircraft Make',\n","'Aircraft Model', 'Aircraft Mass', 'Airport ID', 'Airport',\n","'State', 'FAA Region', 'Warning Issued', 'Flight Phase', 'Visibility',\n","'Precipitation', 'Height', 'Speed', 'Distance', 'Species ID',\n","'Species Name', 'Species Quantity', 'Flight Impact', 'Fatalities',\n","'Injuries', 'Aircraft Damage'\n","```\n","\n","Then confirm that you have fewer columns by checking the shape of `strikes`\n","\n"]},{"cell_type":"code","metadata":{"id":"6f_BJBUTpgJ_"},"source":["# Write your code below\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EcTcgCVmp41b"},"source":["### Missing data\n","\n","Missing/empty/null data is a common problem when working with data.  Let's address some of the missing data in this data set.\n","\n","\n","1.   Use `.count()` or `.info()` on `strikes` to see the number of non-null values in each column\n","2.   Note that `Fatalities` and `Injuries` have the fewest non-null values.  Let's examine these two columns to see what data is in there.\n","3.   For each of the two columns, do a `.value_counts()` to see the distribution of values in the column\n","4.   Let's assume that when data is missing in this column, that it means 0 (i.e. 0 people injured/killed)\n","5.   Use `.fillna()` to fill in NaN with 0\n","6.   Confirm that these two columns no longer have any non-null values using `.count()` or `.info()` again\n"]},{"cell_type":"code","metadata":{"id":"FbZdB-EItWlD"},"source":["# Write your code below"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"B9WqGuR_hGAD"},"source":["## Exploring Data\n","Let's practice accessing and exploring data in the `strikes` dataframe. \n","\n"]},{"cell_type":"markdown","metadata":{"id":"g5M8WU5pyXS7"},"source":["### Using Indices\n","\n","\n","Recall from the lecture the following means of accessing data:\n","- `.loc[row_index]` to access a specific row identified by a specific `row_index` value\n","- `.loc[row_index, column_index]` to access a specific data point identified by the `row_index` and `column_index` (which is generally the column name)\n","- `.iloc[row_index]` to access a row by the integer index number\n","- `.iloc[row_index, column_index]` to access a specific data point identified by the specified integer index numbers\n","\n","Using the above, answer the following questions:\n","\n","For Record ID `357780`\n","1.   On what date did the incident occur? \n","2.   Which airline operator was involved?\n","3.   What type of bird did it strike?\n","4.   How many of this bird did it kill?\n","5.   At which airport did this occur?\n","6.   In which flight phase did this occur?\n"]},{"cell_type":"code","metadata":{"id":"QX3Q2Dfgbw1E"},"source":["# Write your code and answers below"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rKJB5uNOye4W"},"source":["### Using conditional filters\n","\n","Some wildlife aircraft incidents led to human fatalities.  See the column `Fatalities`.  From this data set, how many resulted in fatalities?  Which incident recorded the most fatalities?  What happened?\n","\n","Recommended Steps:\n","\n","1.   Create a boolean variable `has_fatality` representing the cases that have a value `>= 1` in `Fatalities` \n","2.   Using the `has_fatality` boolean variable you created, subset `strikes` to only those incidents that have a recorded fatality.\n","3.   Sort values of the resulting dataframe by number of fatalities using `.sort_values()` with the argument `ascending=False`\n","\n","See this [article](https://www.cnn.com/2010/US/11/24/helicopter.crash.cause/index.html)\n","\n"]},{"cell_type":"code","metadata":{"id":"hOGgKw3bwrO2"},"source":["# Write your code below"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5WPUyeHC4jhu"},"source":["### Combining conditional filters\n","\n","Now, think of your own question you want to explore in the data.  It should be a question that would require multiple conditional filters that are combined using bitwise logic.\n","\n","`&` : and\n","\n","`|` : or\n","\n","`~` : not\n","\n","For example, `condition_a & ~condition_b` is interpreted as \"Condition A is True and Condition B is False\".  `condition_a | condition_b` would be \"Condition A is True OR Condition B is True\" (i.e. at least one is true).\n","\n","Recommended steps:\n","\n","\n","1.   Think of a question you want to explore in this dataset and write it down.\n","2.   Break your question down into conditional filters\n","3.   Create boolean variables for each filter\n","4.   Select from the `strikes` dataframe that data which meets the conditions you specified by combining the boolean variables with the bitwise logic operators you see above\n","5.   Answer your question by exploring the resulting data.\n","6.   If you still have time, repeat this process to see what kind of interesting insights you can find in the data.\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"d1JcK5ZOwrc9"},"source":["# Write your code below"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qZMm2z0rppI-"},"source":[""],"execution_count":null,"outputs":[]}]}
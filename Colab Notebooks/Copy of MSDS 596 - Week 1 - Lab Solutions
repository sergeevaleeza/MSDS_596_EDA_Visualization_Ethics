{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of MSDS 596 - Week 1 - Lab Solutions","provenance":[{"file_id":"1Kw4IwDM57enJqZWXP_TiYiVSrL_7_8y1","timestamp":1634096496495},{"file_id":"1Pjj3F9QgIZcoMzySgrmRmbgPZSeszkLx","timestamp":1598364782508}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"mdoEguBTuCNh"},"source":["# **Lab Exercise #1**\n","\n","In this exercise, we will practice using **lists**, **loops**, and **conditional statements**.  In the first code block below, you are provided with code that will produce a list of 50 random numbers that range from 1 through 100.  Your objective is to take this list, find the single digit random numbers, store these to a new list, and print the new list of single digit random numbers."]},{"cell_type":"code","metadata":{"id":"74arLjQ68Cc2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629815725322,"user_tz":420,"elapsed":173,"user":{"displayName":"Kenneth Simonds","photoUrl":"","userId":"13793884203152248977"}},"outputId":"f0f3293f-23de-4da5-a468-a4a5df948543"},"source":["from random import randint\n","\n","# This code produces a list of 50 random numbers in the range of 1 - 100\n","random_numbers = [randint(1,100) for i in range(50)]\n","print(random_numbers)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[67, 31, 79, 46, 52, 8, 97, 94, 96, 94, 92, 72, 80, 65, 28, 98, 51, 62, 8, 61, 30, 25, 61, 40, 95, 55, 87, 15, 51, 60, 4, 70, 39, 17, 91, 27, 99, 81, 82, 73, 48, 31, 23, 70, 60, 19, 76, 43, 2, 50]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"L0S15SbF85EG"},"source":["  Steps to follow:\n","\n","1.   Create a new list called `single_digit_random_numbers`.\n","2.   Using a `for` loop, iterate through the list `random_numbers`\n","3.   Add any numbers that are less than 10 to `single_digit_random_numbers` using the `append()` function\n","4.   Once the loop completes, print the list `single_digit_random_numbers`\n","5.   Confirm that you have the intended results."]},{"cell_type":"code","metadata":{"id":"nRuBbDv08bns","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1598364879200,"user_tz":420,"elapsed":924,"user":{"displayName":"Kenneth Simonds","photoUrl":"","userId":"13793884203152248977"}},"outputId":"c229a17a-88e8-4912-ff17-bb554776c321"},"source":["# Write your code below\n","single_digit_random_numbers = []\n","\n","for num in random_numbers:\n","    if num < 10:\n","        single_digit_random_numbers.append(num)\n","\n","print(single_digit_random_numbers)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[5, 2, 3]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Lt_z013EXJcA"},"source":["# **Lab Exercise #2**\n","\n","In this exercise, we will get more practice using **lists**, **loops**, and **conditional statements**.  In the first code block below, we re-create the `random_numbers` list that we made in Exercise #1.  This time, your objective is to find the largest number in that list."]},{"cell_type":"code","metadata":{"id":"_9RMj4mXgk0m","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629815727880,"user_tz":420,"elapsed":190,"user":{"displayName":"Kenneth Simonds","photoUrl":"","userId":"13793884203152248977"}},"outputId":"b01ce17e-7aba-4880-d26a-ea3324c2ca18"},"source":["# This code produces a list of 50 random numbers in the range of 1 - 100\n","random_numbers = [randint(1,100) for i in range(50)]\n","print(random_numbers)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[82, 49, 34, 68, 72, 32, 11, 54, 66, 78, 67, 26, 80, 35, 56, 34, 52, 69, 86, 94, 4, 53, 44, 11, 25, 42, 8, 95, 83, 80, 13, 4, 2, 24, 52, 85, 76, 13, 2, 92, 44, 6, 19, 38, 83, 28, 85, 67, 29, 68]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Zpdx_3o0kBiF"},"source":["  Steps to follow:\n","\n","1.   Create a new variable called `largest_number` and set it to 0.\n","2.   Using a `for` loop, iterate through the list `random_numbers`\n","3.   Compare each random number with `largest_number`.  If the random number is greater, then set `largest_number` to equal the random number.\n","4.   Once the loop completes, `largest_number` is the largest number in the list."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"73XZt5c5lU7x","executionInfo":{"status":"ok","timestamp":1629815731737,"user_tz":420,"elapsed":164,"user":{"displayName":"Kenneth Simonds","photoUrl":"","userId":"13793884203152248977"}},"outputId":"cb60e3b7-2eb0-4052-9775-f88a4816120c"},"source":["largest_number = 0\n","\n","for num in random_numbers:\n","    if num > largest_number:\n","        largest_number = num\n","\n","print(largest_number)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["95\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"K-SEwkVZ-qxQ"},"source":["# **Lab Exercise #3**\n","\n","In this exercise, you will use **dictionaries** and **loops** to recategorize numerical movie ratings into rating groups.  This exercise of creating new categorical dimensions of data is useful in data analysis as it provides more levers by which we can filter and group the data to reveal more insights. \n","\n","Your output will be a dictionary with the **movie title** as the **key** and the **rating group** as the **value**.\n","\n","Below is a list of select 2019 movies and their IMDb ratings\n","\n","*   Joker (8.5)\n","*   Avengers: End Game (8.4)\n","*   Star Wars: The Rise of Skywalker (6.6)\n","*   Aladdin (7.0)\n","*   Toy Story 4 (7.8)\n","\n","Rating group definitions are below\n","\n","*   \\>= 8.0 are \"Great\"\n","*   < 8.0 and >= 7.0 are \"Mediocre\"\n","*   < 7.0 are \"Terrible\"\n","\n","\n","Recommended steps:\n","\n","\n","1.   Create a new dictionary called `movie_ratings` and manually input the movie titles as the keys and the numerical ratings as the values.\n","2.   Create an empty dictionary called `movie_rating_groups`.  This dictionary will be filled with movie titles as the keys and the text-based rating groups as the values.\n","3.   Iterate through `movie_ratings` using a `for` loop.  Note that when you iterate through a dictionary, you are iterating through its keys (not values).\n","4.   As you iterate through each key in `movie_ratings`, look up the numerical rating value in `movie_ratings` and translate the value into the appropriate rating group (using the definition above)\n","5.   Add the movie title as the key and the rating group as the value to `movie_rating_groups`\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"p7bYt_68-oau","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631068472757,"user_tz":420,"elapsed":11,"user":{"displayName":"Kenneth Simonds","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13793884203152248977"}},"outputId":"2460d181-6d7a-4a13-bbf6-e3693ff2b88c"},"source":["# Write your code below\n","movie_ratings = {\n","    \"Joker\": 8.5,\n","    \"Avengers: End Game\": 8.4,\n","    \"Star Wars: Rise of Skywalker\": 6.6,\n","    \"Aladdin\": 7.0,\n","    \"Toy Story 4\": 7.8\n","}\n","movie_rating_groups = {}\n","\n","for movie in movie_ratings:\n","    if movie_ratings[movie] >= 8.0:\n","        movie_rating_groups[movie] = \"Great\"\n","    elif movie_ratings[movie] >= 7.0 and movie_ratings[movie] < 8.0:\n","        movie_rating_groups[movie] = \"Mediocre\"\n","    elif movie_ratings[movie] < 7.0:\n","        movie_rating_groups[movie] = \"Terrible\"\n","    \n","print(movie_rating_groups)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Joker': 'Great', 'Avengers: End Game': 'Great', 'Star Wars: Rise of Skywalker': 'Terrible', 'Aladdin': 'Mediocre', 'Toy Story 4': 'Mediocre'}\n"]}]}]}
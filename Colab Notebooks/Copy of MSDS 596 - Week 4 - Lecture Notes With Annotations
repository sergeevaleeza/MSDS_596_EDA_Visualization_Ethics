{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of MSDS 596 - Week 4 - Lecture Notes With Annotations","provenance":[{"file_id":"1VwQbBRy7A_z2Hk_lG9GhKn6eC_Gyy_Rp","timestamp":1634096601045},{"file_id":"1yctTBUWB2fDx97HGwY7WYJXUGkA3E0W4","timestamp":1631398846945},{"file_id":"10i9YKtDNEVXJZu4_NnVq36oFS4rp1_hP","timestamp":1599290591119}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"qCIYgi_55nl8"},"source":["## Group By and Aggregations\n","\n","Frequently when analyzing data, we want to summarize data or compare data between groups.  In doing so, we can reveal any group-level differences or understand how different groups behave better.\n","\n","`pandas` syntax\n","\n","`df.groupby(by=['column_1','column_2'...])`\n","\n","Once we create our groups, we can then aggregate them.\n","\n","For example:\n","\n","`df.groupby(by=['column_1']).sum()` will return a Series with `column_1` as the index (one row for each distinct value of `column_1`) and the sums as the values in the series.\n","\n","Other aggregation functions include (but are not limited to):\n","\n","*   `mean()` \n","*   `median()`\n","*   `mode()` \n","*   `count()` \n","*   `min()`\n","*   `max()`\n","*   `rank()`\n","*   `nunique()`\n","\n","Check out the `pandas` documentation for info on the above:\n","https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.nunique.html"]},{"cell_type":"code","metadata":{"id":"wERXeu_O1gOj"},"source":["import pandas as pd\n","strikes = pd.read_csv('/content/drive/MyDrive/MSDS 596 - Fall 2021/Data/wildlifestrikes.csv', low_memory=False, index_col='Record ID')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":396},"id":"UeKQnaxk8KyS","executionInfo":{"status":"ok","timestamp":1631398709228,"user_tz":420,"elapsed":319,"user":{"displayName":"Kenneth Simonds","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13793884203152248977"}},"outputId":"bb3cf4b3-ef9d-4344-ce77-2552a7b97043"},"source":["strikes.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Incident Year</th>\n","      <th>Incident Month</th>\n","      <th>Incident Day</th>\n","      <th>Operator ID</th>\n","      <th>Operator</th>\n","      <th>Aircraft</th>\n","      <th>Aircraft Type</th>\n","      <th>Aircraft Make</th>\n","      <th>Aircraft Model</th>\n","      <th>Aircraft Mass</th>\n","      <th>Engine Make</th>\n","      <th>Engine Model</th>\n","      <th>Engines</th>\n","      <th>Engine Type</th>\n","      <th>Engine1 Position</th>\n","      <th>Engine2 Position</th>\n","      <th>Engine3 Position</th>\n","      <th>Engine4 Position</th>\n","      <th>Airport ID</th>\n","      <th>Airport</th>\n","      <th>State</th>\n","      <th>FAA Region</th>\n","      <th>Warning Issued</th>\n","      <th>Flight Phase</th>\n","      <th>Visibility</th>\n","      <th>Precipitation</th>\n","      <th>Height</th>\n","      <th>Speed</th>\n","      <th>Distance</th>\n","      <th>Species ID</th>\n","      <th>Species Name</th>\n","      <th>Species Quantity</th>\n","      <th>Flight Impact</th>\n","      <th>Fatalities</th>\n","      <th>Injuries</th>\n","      <th>Aircraft Damage</th>\n","      <th>Radome Strike</th>\n","      <th>Radome Damage</th>\n","      <th>Windshield Strike</th>\n","      <th>Windshield Damage</th>\n","      <th>Nose Strike</th>\n","      <th>Nose Damage</th>\n","      <th>Engine1 Strike</th>\n","      <th>Engine1 Damage</th>\n","      <th>Engine2 Strike</th>\n","      <th>Engine2 Damage</th>\n","      <th>Engine3 Strike</th>\n","      <th>Engine3 Damage</th>\n","      <th>Engine4 Strike</th>\n","      <th>Engine4 Damage</th>\n","      <th>Engine Ingested</th>\n","      <th>Propeller Strike</th>\n","      <th>Propeller Damage</th>\n","      <th>Wing or Rotor Strike</th>\n","      <th>Wing or Rotor Damage</th>\n","      <th>Fuselage Strike</th>\n","      <th>Fuselage Damage</th>\n","      <th>Landing Gear Strike</th>\n","      <th>Landing Gear Damage</th>\n","      <th>Tail Strike</th>\n","      <th>Tail Damage</th>\n","      <th>Lights Strike</th>\n","      <th>Lights Damage</th>\n","      <th>Other Strike</th>\n","      <th>Other Damage</th>\n","    </tr>\n","    <tr>\n","      <th>Record ID</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>127128</th>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>DAL</td>\n","      <td>DELTA AIR LINES</td>\n","      <td>B-757-200</td>\n","      <td>A</td>\n","      <td>148</td>\n","      <td>26</td>\n","      <td>4.0</td>\n","      <td>34.0</td>\n","      <td>40</td>\n","      <td>2.0</td>\n","      <td>D</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>KCVG</td>\n","      <td>CINCINNATI/NORTHERN KENTUCKY INTL ARPT</td>\n","      <td>KY</td>\n","      <td>ASO</td>\n","      <td>NaN</td>\n","      <td>CLIMB</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NE1</td>\n","      <td>GULL</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>129779</th>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>HAL</td>\n","      <td>HAWAIIAN AIR</td>\n","      <td>DC-9</td>\n","      <td>A</td>\n","      <td>583</td>\n","      <td>90</td>\n","      <td>4.0</td>\n","      <td>34.0</td>\n","      <td>10</td>\n","      <td>2.0</td>\n","      <td>D</td>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>PHLI</td>\n","      <td>LIHUE ARPT</td>\n","      <td>HI</td>\n","      <td>AWP</td>\n","      <td>NaN</td>\n","      <td>TAKEOFF RUN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>ZZ201</td>\n","      <td>HOUSE SPARROW</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>129780</th>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>UNK</td>\n","      <td>UNKNOWN</td>\n","      <td>UNKNOWN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>PHLI</td>\n","      <td>LIHUE ARPT</td>\n","      <td>HI</td>\n","      <td>AWP</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>R1101</td>\n","      <td>BARN OWL</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2258</th>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>MIL</td>\n","      <td>MILITARY</td>\n","      <td>A-10A</td>\n","      <td>A</td>\n","      <td>345</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>22.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>D</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>KMYR</td>\n","      <td>MYRTLE BEACH INTL</td>\n","      <td>SC</td>\n","      <td>ASO</td>\n","      <td>NaN</td>\n","      <td>APPROACH</td>\n","      <td>DAY</td>\n","      <td>NaN</td>\n","      <td>200.0</td>\n","      <td>138.0</td>\n","      <td>NaN</td>\n","      <td>UNKBM</td>\n","      <td>UNKNOWN MEDIUM BIRD</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2257</th>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>MIL</td>\n","      <td>MILITARY</td>\n","      <td>F-16</td>\n","      <td>A</td>\n","      <td>561</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>KJAX</td>\n","      <td>JACKSONVILLE INTL</td>\n","      <td>FL</td>\n","      <td>ASO</td>\n","      <td>NaN</td>\n","      <td>CLIMB</td>\n","      <td>DAY</td>\n","      <td>NaN</td>\n","      <td>100.0</td>\n","      <td>200.0</td>\n","      <td>NaN</td>\n","      <td>ZX</td>\n","      <td>FINCH</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           Incident Year  Incident Month  ...  Other Strike Other Damage\n","Record ID                                 ...                           \n","127128              1990               1  ...             0            0\n","129779              1990               1  ...             1            0\n","129780              1990               1  ...             0            0\n","2258                1990               1  ...             0            0\n","2257                1990               1  ...             0            0\n","\n","[5 rows x 65 columns]"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"rbOgh9wGKnLl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631398824031,"user_tz":420,"elapsed":269,"user":{"displayName":"Kenneth Simonds","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13793884203152248977"}},"outputId":"e614777d-7152-41cc-d6d4-521c132be014"},"source":["# This confirms that the \"Aircraft Damage\" column contains only 0s and 1s\n","# Because we have only 1s and 0s, we can do things like \n","# count() to get the total number of incidents\n","# sum() to get the total number of incidents with damage (because we get 1 when there is damage and 0 otherwise)\n","# mean() to get the % of incidents with damage (this is basically sum()/count())\n","strikes['Aircraft Damage'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    159135\n","1     14969\n","Name: Aircraft Damage, dtype: int64"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"YzNWvG8LHhvx"},"source":["# Creates a new dataframe strikes_by_species\n","# strikes_by_species groups the data by \"Species Name\" and aggregates it by \n","# performing count(), sum(), and mean() on the \"Aircraft Damage\" column\n","strikes_by_species = strikes.groupby(by=['Species Name'])['Aircraft Damage'].agg(['count','sum','mean'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uEa4PPhJXcR9"},"source":["# This renames the columns of strikes_by_species from the agg function names to \n","# something more easily understood\n","strikes_by_species = strikes_by_species.rename(columns={'count': 'num_incidents', 'sum': 'num_incidents_with_damage', 'mean': 'pct_incidents_with_damage'})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dA8cs1ppMf4r"},"source":["# We can now view and explore the data by filtering and sorting the output\n","strikes_by_species[(strikes_by_species['num_incidents'] >= 100)].sort_values(by='pct_incidents_with_damage', ascending=False).head(25)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"i5Ks0qAp-6cO"},"source":["## Data Description\n","\n","The dataset used in this Homework comes from the United States Social Security Administration.  It has the frequency of baby names by birth year and gender between the years of 1880 - 2014.  \n","\n","See Kaggle page for more info: https://www.kaggle.com/kaggle/us-baby-names/home?select=NationalNames.csv \n","\n","You can download the CSV directly from the Kaggle link above (choose `NationalNames.csv`).  The file is also available in the Canvas Module for **EDA with pandas** under the name `NationalNames.csv`\n","\n","Load this data into `pandas` and use `index_col='Id'`"]},{"cell_type":"code","metadata":{"id":"igdhD8eZEfE_"},"source":["import pandas as pd\n","baby_names = pd.read_csv('/content/drive/My Drive/Colab Notebooks/Data/NationalNames.csv', index_col=\"Id\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"blpMtlZej4B5"},"source":["baby_names.tail()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wb7TVQlQj6Q0"},"source":["# What is the top baby name per gender per decade?\n","# Decade\n","# Rank"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qVgLJ3gzmBXi"},"source":["# Building the decade column\n","# Example\n","# 2014 => 2010s\n","def year_to_decade(year):\n","    year_str = str(year)\n","    return year_str[0:3] + '0s'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LtpSNOJ4mvii"},"source":["# Testing our new function\n","year_to_decade(2000)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"iJf4eNBrmx9y"},"source":["# Creating a new column \"Decade\" in the baby_names dataframe\n","# by transforming the numerical Year into a string Decade\n","baby_names['Decade'] = baby_names.Year.transform(year_to_decade)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZD7NT368n48_"},"source":["# Validating our new column\n","baby_names.Decade.value_counts()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OLXCoFkSn7Jd"},"source":["# Create a new dataframe baby_names_decade that has a count of babies born \n","# by name, decade, and gender\n","# as_index = False forces the groupby columns to be columns instead of indices\n","# which forces the output to be a dataframe rather than a series\n","baby_names_decade = baby_names.groupby(by=['Name', 'Decade', 'Gender'], as_index=False)['Count'].sum()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dDHxVHOmpJmi"},"source":["baby_names_decade.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-QWT0e_Fs08j"},"source":["# Create the new Rank column by using the rank function\n","# We group by Decade and Gender (not by Name) as we want to calculate the rank of each row (Name)\n","# within groups defined by Decade and Gender\n","baby_names_decade['Rank'] = baby_names_decade.groupby(by=['Decade', 'Gender'])['Count'].rank(ascending=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bgFknUn1t_00"},"source":["is_rank_one = baby_names_decade.Rank == 1.0\n","baby_names_decade[is_rank_one].sort_values(by=['Decade','Gender'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2CqK9b4Wur3o"},"source":["# What is the frequency of a given name (relative popularity) over time?"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"C-m9vU-DxxSx"},"source":["baby_names[(baby_names.Name == 'Mary') & (baby_names.Gender == 'F')]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"d6haZTTCzRW1"},"source":["# As a sanity check, let's see how many babies were born per Year/Gender group\n","# We can then use these numbers to manually calculate a few to make sure we are getting\n","# the results we want\n","baby_names.groupby(by=['Year','Gender'])['Count'].sum()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"by-daj7f0bvZ"},"source":["# Create a new column Frequency100K which calculates a \"% of total\" for each name\n","# The numerator is the count of that name in a given year for a given gender\n","# The denominator is the sum (total) of count for a given year and a given gender\n","baby_names['Frequency100K'] = baby_names.groupby(by=['Year','Gender'])['Count'].transform(lambda x: x*100000/x.sum())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZnxD1mEi1EnC"},"source":["# For example, (Mary, 1880, F) is calculated as 7065*100000/90993 = 7764.33\n","baby_names[(baby_names.Name == 'Mary') & (baby_names.Gender == 'F')]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"t2n20FvJ1PxS"},"source":["import seaborn as sns\n","# other options\n","# darkgrid, white, dark, ticks\n","sns.set(style='ticks')\n","\n","# If we use .isin(), we can check for multiple values\n","# but remember to separate out these values in some way visually (e.g. via the hue setting)\n","name = baby_names[(baby_names.Name.isin(['Jessie']))]\n","\n","# x = the series to use for the x-axis\n","# y = the series to use for the y-axis\n","# hue = option to add multiple series separated by color\n","sns.lineplot(x=name.Year, y=name.Frequency100K, hue=name.Gender)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"s96BfSX85YiN"},"source":[""],"execution_count":null,"outputs":[]}]}
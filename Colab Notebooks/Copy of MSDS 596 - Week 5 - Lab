{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of MSDS 596 - Week 5 - Lab","provenance":[{"file_id":"1kM9J_Pl_MXMQMQ7hS1G5GH9mWoV8aNEr","timestamp":1632278354225},{"file_id":"1CWw637u41OZ5aZKuaAv4NxDBUbEjv1G7","timestamp":1632277059880},{"file_id":"1F-5TkQ2oLZBrCzyPgQk0D0-WzzZyj5s-","timestamp":1600034590936},{"file_id":"1JjghofUm3FE_OmiOPszZJ3GzHfjNfV1I","timestamp":1598825524903}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"g8Hf3j18KEZ3"},"source":["# Lab Overview\n","\n","**Remember to create a copy of this notebook for your own purposes so that any work that you do is saved to your personal copy of this lab**\n","\n","In this lab, we'll be working with "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BO8ZXjhyX_Bi","executionInfo":{"status":"ok","timestamp":1632278428740,"user_tz":420,"elapsed":16335,"user":{"displayName":"Elizaveta Sergeeva","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13911837901844970628"}},"outputId":"781857d6-b3c8-474e-a13d-dce6dbfd1f92"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"id":"7pItSCyakZeI","colab":{"base_uri":"https://localhost:8080/","height":358},"executionInfo":{"status":"ok","timestamp":1632279188813,"user_tz":420,"elapsed":2166,"user":{"displayName":"Elizaveta Sergeeva","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13911837901844970628"}},"outputId":"dd99057e-4072-413a-bfc6-21d98ccae0d0"},"source":["# Import pandas and check the version\n","import pandas as pd\n","import seaborn as sns\n","\n","strikes = pd.read_csv('/content/drive/MyDrive/2021_Fall_USF_PMS_Biotechnology/MSDS_596/data/wildlifestrikes.csv',\n","                          low_memory=False)\n","strikes.head(5)"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Record ID</th>\n","      <th>Incident Year</th>\n","      <th>Incident Month</th>\n","      <th>Incident Day</th>\n","      <th>Operator ID</th>\n","      <th>Operator</th>\n","      <th>Aircraft</th>\n","      <th>Aircraft Type</th>\n","      <th>Aircraft Make</th>\n","      <th>Aircraft Model</th>\n","      <th>Aircraft Mass</th>\n","      <th>Engine Make</th>\n","      <th>Engine Model</th>\n","      <th>Engines</th>\n","      <th>Engine Type</th>\n","      <th>Engine1 Position</th>\n","      <th>Engine2 Position</th>\n","      <th>Engine3 Position</th>\n","      <th>Engine4 Position</th>\n","      <th>Airport ID</th>\n","      <th>Airport</th>\n","      <th>State</th>\n","      <th>FAA Region</th>\n","      <th>Warning Issued</th>\n","      <th>Flight Phase</th>\n","      <th>Visibility</th>\n","      <th>Precipitation</th>\n","      <th>Height</th>\n","      <th>Speed</th>\n","      <th>Distance</th>\n","      <th>Species ID</th>\n","      <th>Species Name</th>\n","      <th>Species Quantity</th>\n","      <th>Flight Impact</th>\n","      <th>Fatalities</th>\n","      <th>Injuries</th>\n","      <th>Aircraft Damage</th>\n","      <th>Radome Strike</th>\n","      <th>Radome Damage</th>\n","      <th>Windshield Strike</th>\n","      <th>Windshield Damage</th>\n","      <th>Nose Strike</th>\n","      <th>Nose Damage</th>\n","      <th>Engine1 Strike</th>\n","      <th>Engine1 Damage</th>\n","      <th>Engine2 Strike</th>\n","      <th>Engine2 Damage</th>\n","      <th>Engine3 Strike</th>\n","      <th>Engine3 Damage</th>\n","      <th>Engine4 Strike</th>\n","      <th>Engine4 Damage</th>\n","      <th>Engine Ingested</th>\n","      <th>Propeller Strike</th>\n","      <th>Propeller Damage</th>\n","      <th>Wing or Rotor Strike</th>\n","      <th>Wing or Rotor Damage</th>\n","      <th>Fuselage Strike</th>\n","      <th>Fuselage Damage</th>\n","      <th>Landing Gear Strike</th>\n","      <th>Landing Gear Damage</th>\n","      <th>Tail Strike</th>\n","      <th>Tail Damage</th>\n","      <th>Lights Strike</th>\n","      <th>Lights Damage</th>\n","      <th>Other Strike</th>\n","      <th>Other Damage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>127128</td>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>DAL</td>\n","      <td>DELTA AIR LINES</td>\n","      <td>B-757-200</td>\n","      <td>A</td>\n","      <td>148</td>\n","      <td>26</td>\n","      <td>4.0</td>\n","      <td>34.0</td>\n","      <td>40</td>\n","      <td>2.0</td>\n","      <td>D</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>KCVG</td>\n","      <td>CINCINNATI/NORTHERN KENTUCKY INTL ARPT</td>\n","      <td>KY</td>\n","      <td>ASO</td>\n","      <td>NaN</td>\n","      <td>CLIMB</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NE1</td>\n","      <td>GULL</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>129779</td>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>HAL</td>\n","      <td>HAWAIIAN AIR</td>\n","      <td>DC-9</td>\n","      <td>A</td>\n","      <td>583</td>\n","      <td>90</td>\n","      <td>4.0</td>\n","      <td>34.0</td>\n","      <td>10</td>\n","      <td>2.0</td>\n","      <td>D</td>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>PHLI</td>\n","      <td>LIHUE ARPT</td>\n","      <td>HI</td>\n","      <td>AWP</td>\n","      <td>NaN</td>\n","      <td>TAKEOFF RUN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>ZZ201</td>\n","      <td>HOUSE SPARROW</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>129780</td>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>UNK</td>\n","      <td>UNKNOWN</td>\n","      <td>UNKNOWN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>PHLI</td>\n","      <td>LIHUE ARPT</td>\n","      <td>HI</td>\n","      <td>AWP</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>R1101</td>\n","      <td>BARN OWL</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2258</td>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>MIL</td>\n","      <td>MILITARY</td>\n","      <td>A-10A</td>\n","      <td>A</td>\n","      <td>345</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>22.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>D</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>KMYR</td>\n","      <td>MYRTLE BEACH INTL</td>\n","      <td>SC</td>\n","      <td>ASO</td>\n","      <td>NaN</td>\n","      <td>APPROACH</td>\n","      <td>DAY</td>\n","      <td>NaN</td>\n","      <td>200.0</td>\n","      <td>138.0</td>\n","      <td>NaN</td>\n","      <td>UNKBM</td>\n","      <td>UNKNOWN MEDIUM BIRD</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2257</td>\n","      <td>1990</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>MIL</td>\n","      <td>MILITARY</td>\n","      <td>F-16</td>\n","      <td>A</td>\n","      <td>561</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>KJAX</td>\n","      <td>JACKSONVILLE INTL</td>\n","      <td>FL</td>\n","      <td>ASO</td>\n","      <td>NaN</td>\n","      <td>CLIMB</td>\n","      <td>DAY</td>\n","      <td>NaN</td>\n","      <td>100.0</td>\n","      <td>200.0</td>\n","      <td>NaN</td>\n","      <td>ZX</td>\n","      <td>FINCH</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Record ID  Incident Year  ...  Other Strike  Other Damage\n","0     127128           1990  ...             0             0\n","1     129779           1990  ...             1             0\n","2     129780           1990  ...             0             0\n","3       2258           1990  ...             0             0\n","4       2257           1990  ...             0             0\n","\n","[5 rows x 66 columns]"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"7aozEL0dKn_I"},"source":["## Preparation\n","\n","Steps:\n","\n","\n","1.   Download the data set `wildlifestrikes.csv` from Canvas Module 2.  It is ~36MB so may take a minute or two.\n","2.   Upload this file into your own Google Drive.  For convenience, you may consider creating a single folder to store all of your data sets.\n","3.   Connect your CoLab notebook to your Google Drive using the Folder icon on the left side of the screen\n","4.   Find `wildlifestrikes.csv` from within your Google Drive and right click on it to \"Copy Path\"\n","5.   If you haven't already in the pre-prep above, import `pandas` in the code section below\n","6.   Load the dataset using `pandas` into a dataframe called `strikes`.  Set `low_memory=False` and `index_col='Record ID'`.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"LJA8Gu3HpN9v"},"source":["Create a chart showing strikes per year and strikes per month.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"p8tN-_z2M-hk"},"source":["## Lab Exercise 1\n","\n","*Time Series Plots*\n","\n","Let's create a chart to show the number of wildlife strikes reported per year and per flight phase.\n","\n","Suggested steps:\n","\n","1.   Group by `Incident Year` and `Flight Phase` and `count()` `Record ID` as well as the setting `as_index=False` to create a new aggregated dataframe and store it with a new name.  \n","2.   In the new dataframe, rename the `Record ID` count field to `# of Incidents`.  Use `inplace=True` to \"save\" the changes to your new dataframe.\n","3.   Use `sns.relplot` with `kind=\"line\"` to plot a time series chart with year on the x-axis and # of incidents on the y-axis.  The `hue` parameter can be set to flight phase.  Optionally you can add `palette=\"Paired\"` to get a color pallete which better distinguishes between the different series. [For more on color palettes](https://seaborn.pydata.org/tutorial/color_palettes.html)\n","\n","Let's now create a second chart to show the number of wildlife strikes reported by month and flight phase to see if there are any seasonal trends.\n","\n","\n","1.   Using largely the same code as above, make a new dataframe that aggregates by `Incident Month` and `Flight Phase` and plots a line chart.\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"pmX04ZPpS_zM","colab":{"base_uri":"https://localhost:8080/","height":417},"executionInfo":{"status":"ok","timestamp":1632279475981,"user_tz":420,"elapsed":117,"user":{"displayName":"Elizaveta Sergeeva","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13911837901844970628"}},"outputId":"1c6cf765-4b89-4498-c02c-16959c4ee87d"},"source":["# 1. Groupd and aggregate dataframe \n","incident_flight_count = strikes.groupby(by=[\"Incident Year\", \"Flight Phase\"], as_index=False)[\"Record ID\"].count()\n","# 2. change column Record ID to # of Incidents\n","\n","incident_flight_count[\"# of Incidents\"] = incident_flight_count[\"Record ID\"]\n","number_of_incidents = incident_flight_count.drop(columns=\"Record ID\")\n","number_of_incidents"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Incident Year</th>\n","      <th>Flight Phase</th>\n","      <th># of Incidents</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1990</td>\n","      <td>APPROACH</td>\n","      <td>748</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1990</td>\n","      <td>CLIMB</td>\n","      <td>342</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1990</td>\n","      <td>DESCENT</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1990</td>\n","      <td>EN ROUTE</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1990</td>\n","      <td>LANDING ROLL</td>\n","      <td>325</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>272</th>\n","      <td>2015</td>\n","      <td>LANDING ROLL</td>\n","      <td>1068</td>\n","    </tr>\n","    <tr>\n","      <th>273</th>\n","      <td>2015</td>\n","      <td>LOCAL</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>274</th>\n","      <td>2015</td>\n","      <td>PARKED</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>275</th>\n","      <td>2015</td>\n","      <td>TAKEOFF RUN</td>\n","      <td>973</td>\n","    </tr>\n","    <tr>\n","      <th>276</th>\n","      <td>2015</td>\n","      <td>TAXI</td>\n","      <td>19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>277 rows × 3 columns</p>\n","</div>"],"text/plain":["     Incident Year  Flight Phase  # of Incidents\n","0             1990      APPROACH             748\n","1             1990         CLIMB             342\n","2             1990       DESCENT              61\n","3             1990      EN ROUTE              53\n","4             1990  LANDING ROLL             325\n","..             ...           ...             ...\n","272           2015  LANDING ROLL            1068\n","273           2015         LOCAL              26\n","274           2015        PARKED               9\n","275           2015   TAKEOFF RUN             973\n","276           2015          TAXI              19\n","\n","[277 rows x 3 columns]"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"LYZqkc4YcSTi","executionInfo":{"status":"ok","timestamp":1632279650060,"user_tz":420,"elapsed":889,"user":{"displayName":"Elizaveta Sergeeva","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13911837901844970628"}},"outputId":"f0797a6f-a501-4e48-c431-be3a0bf24bd0"},"source":["sns.relplot(data=number_of_incidents, \n","            x=\"Incident Year\", \n","            y=\"# of Incidents\", \n","            hue=\"Flight Phase\", \n","            kind=\"line\", \n","            palette=\"Paired\")"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f5e3e3a9ed0>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAcMAAAFgCAYAAADHDhKeAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdeXzcZbX48c+ZJfvapvu+Ugq0BcoqKIsKIrIoilw3XC56RS+o93rBfYEr112uopd72fSnIoosIqIIZUegQPc1TUu3NM3S7DPJLOf3x/dJOk1nkkmbSTKT83695pWZ57s9gTQnz/f7POeIqmKMMcaMZb6R7oAxxhgz0iwYGmOMGfMsGBpjjBnzLBgaY4wZ8ywYGmOMGfMCI92BTLjwwgv1scceG+luGGNyl4x0B8zQysmRYUNDw0h3wRhjTBbJyWBojDHGDIYFQ2OMMWOeBUNjjDFjngVDY4wxY54FQ2OMMWOeBUNjjDFjngVDY4wxY54FQ2OMMWOeBUNjjDFjngVDY4wxY54FQ2OMMWOeBUNjTM4JR2Ic6Owe6W6YLGLB0BiTc9bWtrJimyXsN+mzYGiMyTlNoW66onEisfhId8VkCQuGxpicElelJRQFIBSJjXBvTLawYGiMySkdXVFiqoAFQ5M+C4bGmJzSHI70vg9F7DapSY8FQ2NMTmkOJQZDGxma9FgwNMbklOZQhLL8AAGf0GnB0KQpMNIdMMaYodQcilBZlIdiI0OTPhsZGmNyRiQWp707RkVhkMKg34KhSVvGgqGIFIjIyyKyWkTWi8g3XfvdIrJdRFa51zLXLiJyq4hUi8gaETkp4VwfEZGt7vWRTPXZGJPdWtzkmYrCIEUWDM0gZPI2aRdwnqq2i0gQeE5E/uK2/buq/qHP/u8AFrjXacDPgdNEZBzwdWA5oMCrIvKwqh7IYN+NMVmoZ/JMRUGQhmAXoUgMVUVERrhnZrTL2MhQPe3uY9C9tJ9DLgV+6Y77B1AhIlOAC4DHVbXJBcDHgQsz1W9jTPZqDkUI+ITiPD+FQT9xhW7LQmPSkNFnhiLiF5FVwH68gPaS23SzuxX6IxHJd23TgF0Jh+92bana+17rGhFZKSIr6+vrh/x7McaMfs3hCBWFQUSEwqAfgM5uu1VqBpbRYKiqMVVdBkwHThWR44EbgUXAKcA44D+G6Fq3q+pyVV0+YcKEoTilMSaLqCotoQgVBUGA3mBozw1NOoZlNqmqNgMrgAtVtdbdCu0C7gJOdbvtAWYkHDbdtaVqN8aYXqFIjO6YUlHoBcOivJ5gaLdJzcAyOZt0gohUuPeFwNuATe45IOI90b4MWOcOeRj4sJtVejrQoqq1wF+Bt4tIpYhUAm93bcYY06t38owLhgUBGxma9GVyNukU4B4R8eMF3ftU9REReVJEJgACrAI+5fZ/FLgIqAY6gY8CqGqTiHwbeMXt9y1Vbcpgv40xWagnJ2m5u03q9wn5AZ9loTFpyVgwVNU1wIlJ2s9Lsb8C16bYdidw55B20BiTU5pDEYqCfvICB2942cJ7ky7LQGOMyQnNoUjvLdIetvDepMuCoTEm68XiSms4elgwtJGhSZcFQ2NM1mvtiqCQJBj6CEfjxLW/fB/GWDA0xuSAxDRsiWytoUmXBUNjTNZrDkXwCZQWHDon0IKhSZcFQ2NM1msJRSgrCOLrk5D7YDC0hfemfxYMjTFZrycnaV9FNjI0abJgaIzJal3RGKFI/LDnhQD5AR8+wRbemwFZMDTGZLW+adgSiQgFAVteYQZmwdAYk9X6C4bg1hpaGSczAAuGxpis1hyOkB/wURBI/uusKM9PKGrB0PTPgqExJqv11DCUPjNJe9jI0KTDgqExJmvFVWlOkoYtUWHQRySuRGK2vMKkZsHQGJO1OrqixOI6QDC05RVmYBYMjTFZqzkcBaDcgqE5ShYMjTFZqznUjQDlBalLsxZZFhqTBguGxpis1RyKUJIfIOBL/avMRoYmHRYMjTFZa6DJMwBBv4+ATywLjemXBUNjTFaKxOK0dw0cDMGK/JqBWTA0xmSllnDyGobJWDA0A7FgaIzJSgOlYUtkwdAMxIKhMSYrtYSjBHxCcZ5/wH2Lgj5CkRiqOgw9M9nIgqExJis1h7qpKEydhi1RYdBPXKHbstCYFCwYGmOyjqrSHIpQnsbzQji4vKLTcpSaFCwYGmOyTigSpzvWfxq2RLbW0AzEgqExJus0h7qB9CbPgFfGCSwLjUnNgqExZkTFVXlpZxO7mkNpH9M8iGUVAAUBGxma/lkwNMaMqD0tYWoaO3lhRyONHd1pHdMcilIU9JOXoqBvX36fkB/wWTA0KVkwNMaMGFVlY10rxXl+CoN+nt3emFbAag5F0r5F2qMw6LeUbCaljAVDESkQkZdFZLWIrBeRb7r2OSLykohUi8jvRCTPtee7z9Vu++yEc93o2jeLyAWZ6rMxZnjVt3fT2Bnh2EmlnD1nPN2xOM9tbyQWT70eMBZXWsODD4ZFtvDe9COTI8Mu4DxVXQosAy4UkdOB/wJ+pKrzgQPAx93+HwcOuPYfuf0QkcXA+4HjgAuB20Rk4FW2xphRb+P+NvIDPuaMK6ayKI/TZ1bS0NHNq7ubUy6Qb+uKopD2sooeloXG9CdjwVA97e5j0L0UOA/4g2u/B7jMvb/UfcZtP1+81bSXAveqapeqbgeqgVMz1W9jzPBoDkXY2xpm4YQSAj5v4fzMyiIWTyplW2MH1Q0dKY8DqBz0bVIf4WicuGWhMUlk9JmhiPhFZBWwH3gc2AY0q2rU7bIbmObeTwN2AbjtLcD4xPYkxxhjstTG/W0EfMKCqpJD2k+YUsbUsgJe3d3M/vauw45rDnXjEyjtp6BvMrbW0PQno8FQVWOqugyYjjeaW5Spa4nINSKyUkRW1tfXZ+oyxpgh0NEd5Y2mTuaNLya/z4xQnwhnzB5HSX6A57Y30tEdPWR7czhKWUEQXxpp2BJZMDT9GZbZpKraDKwAzgAqRKTnT7rpwB73fg8wA8BtLwcaE9uTHJN4jdtVdbmqLp8wYUJGvg9jzNDYvN97gnLMxJKk2/P8Pt48dzzxuPJsTSPR+MHF8s2hSNrrCxMdDIa28N4cLpOzSSeISIV7Xwi8DdiIFxSvcLt9BHjIvX/YfcZtf1K9J+gPA+93s03nAAuAlzPVb2NMZnVH42xr7GBWZRHFealvdZYVBDlj9jgOhCK8vPMAqkpXNEYoEhv0TFLwZpOCjQxNcoO76T44U4B73MxPH3Cfqj4iIhuAe0XkJuB14A63/x3Ar0SkGmjCm0GKqq4XkfuADUAUuFZV7afZmCy1taGdaFw5dlLpgPtOKy9kyZQy1tS2UlnYzrgiLwgeSTDMD/jwCbbW0CSVsWCoqmuAE5O015BkNqiqhoH3pjjXzcDNQ91HY8zwisWVzfXtTCkrSDugLZ5UyoFQhNV7W5hWXgAcWTAUEQoCtrzCJGcZaIwxw2Z7Uwdd0TjHpnhWmIyIcPrMSsoLguxuCZMf8FGQZhq2vgqDfkJWxskkYcHQGDMs4qps3O/d6pxYkj+oYwN+H2fPHU+e30dlmgV9kynK8xOKWjA0h8vkM0NjjOm1pyVEe1eUs+aMO6JgVpIf4IJjJuLzHVkgBG9kuK81fMTHm9xlwdAYk3Gqyoa6NkryA0wrLzzi85TkH92vrMKAj0hcicTiBP12Y8wcZD8NxpiM29/eRVNnhGMnlgx6sfxQKsyz5RUmOQuGxpiM27i/nfyAj9njike0H9mahUZEYiKyKuE1W0TOEZFH3PZLROSGAc7Ru3+SbdeLSFGKbU+5ikGrReR5ETnGte8Qkaqj/d5GCwuGxpiMOhDqprY1zDEJCblHSlH2ZqEJqeqyhNeOxI2q+rCq3nIU578eSBoMnQ+4CkT3AN87iuuMWhYMjTEZtamuPWlC7pGQrSPDgYjI1SLyU/d+noj8Q0TWishNItKesGuJiPxBRDaJyK/F86/AVGCFiKwY4FLPAPMTPn9WRF5z11rkrn+qiLwoIq+LyAsJI8njXI3bVSKyRkQWuPYPJrT/z0iV6LNgaIzJmI7uKG8c8BJy5x3h2sChFPT7CPgkG7PQFCbcIn1ggH1/AvxEVU/Aq/KT6ES8UeBiYC7wJlW9FdgLnKuq5w5w7ncBaxM+N6jqScDPgX9zbZuAs1X1ROBrwH+69k+5fi0DlgO7ReRY4ErXj2VADPjAAH3ICJtNaowBYFdziPr2Lk6cVn7E6/j6Gigh90jI0iK/IRcs0nEGB+vE/gb4fsK2l1V1N4ArrzcbeC6Nc/5aRELADuCzCe1/dF9fBd7t3pfjpeJcgFfDtidd0IvAl0VkOvBHVd0qIucDJwOvuJ+5QrySf8POgqExBoDqhnb2tXUxuTSfqUex/KFHVzTmJeQe139C7uGWpcFwqCQWiIyRfgz4gKqu7Od8ief6NrBCVS8XkdnAUwCq+hsReQl4J/CoiHwSEOAeVb1xMN9EJoz8fQtjzKjQEvYqyK/a2zIk1eDX1rYSiyuLJw6ckHs4jYFg+A/gPe79+9M8pg0Yqv9R5Rwss3d1T6OIzAVq3G3Zh4AlwBPAFSIy0e0zTkRmDVE/BsWCoTHGlUaKU1WcR0s4yo6mzqM6X3MoQnVDB/Oriik/gqTamVQU9BGKxNAhCPij1PXA50VkDd5kl5Y0jrkdeCyNCTTp+C7wHRF5nUNHnu8D1rnbs8cDv1TVDcBXgL+5/j6OV/Fo2Eku/kAsX75cV65MNqI3xiRT1xbmyeoG3jKvinW1LXRG4ly8eBIB3+D/XlZVVlQ3cCAU4eLFkw+rZD/SNu9v47U9Lbz7hCnkB4544uLIrhHph1svGFJVFZH3A1ep6qUj3a/RbnT9lBpjRkRzyLtFWlkYZNm0CkKRWO/kl8Ha3RKmrr2LJVPKRl0ghIPLK7JwRmm6TgZWuZHWp4EvjHB/ssLoeaptjBkxLeFob2mkwmA+08oL2FDXxrzxxRQE0x89xeLK63uaKS8IMq9qZLPNpNK71rA7RuXRzxMadVT1WWDpSPcj24y+P9uMMcOuOdRNecHB0khLp5YTiyvr69oGdZ5N+9vo6I5x0vTyEc1B2p+invyk0azLQmMyyIKhMWOcqtIcjh5SPb68IMjc8cVsrW+nrSua1nk6u6Osr2tjenkhk0sLMtXdo1YQODgyNKaHBUNjxrj27hixuB4SDAFOmFKGzyes2ZvOZERYtbcVVeXEaeWZ6OaQ8fuE/IAv15dXmEGyYGjMGNczeaai4NBgWBj0c+zEEnY2h2jo6Ep2aK/69i7eONDJsRNLj7rm4HAoDPpzeQKNOQIWDI0Z43qCYXnh4UFs0cRSCgI+Vu1tSbkuT1V5bXczhUE/iyeNrgX2qRTl2MJ7EblMRDQhWfZsEQm5XKYbROQXIuIbRPsvRSSYcP6zXDLtTe51TZ/rB0SkXkRu6dNe4pJvbxORV105qNPctvY++/YmGx8JFgyNGeOaQxFK8wNJ1xQG/T6On1JGfXs3e1vDSY+vaeqkKRRh2dRyAllSPT4Hs9BchZdj9KqEtm0un+kSvMTcl6XZfgIwHW+RPCIyGS/H6adUdRFwFvBJEXlnwrXeBmwB3iuHJrb9P6AJWKCqJwMfBUZlDcTs+Mk1xmRMSzhy2PPCRPPGF1OaH0iapq07Fmf13haqivOYlUXrFAqDPsLR+JCknRtpIlKCF6A+TpL0a6oaBV7g0NJL/bXHgJeBaa7pWuBuVX3NbW8AvggkFhO+Cq9axk68ROGIyDzgNOArqhp3x25X1T8fxbebMaP/5r4xJmOisThtXVFmVaau6+oTYdnUcp7d3khNYwfzE+oSrt/XSlc0zjnzKoas0sVwSKxrOFRJxH/7+u4fA+lWlkjXqqtOnH79APtcCjymqltEpFFETgYaeza6jDTn45VTIo32Arwgdp1rOg6vqG+ila69Z/+3Ap8EKvAC4wtu+yoXXJMpdKnZeowDHh7ge80YGxkaM4a1hL1lE/2NDAGmlRdQVZzH2tpWojFvfV5rOMKW+nbmjitiXFFexvs6lHKsyO9VwL3u/b0cvFU6zwWb54E/q+pf0myvA2pVdU2a178Yr0pFCLgfuCzNAr0hVV3W86JPUB5uNjI0ZgxrdpUqBgqGIsKJ08p5fEs9m+rbOX5yGa/vacEvwpKpo3spRTIHg+HQLbxPYwQ35ERkHHAecIKIKODHqyH4Mw4+A+yr33YRqQKeF5FLVPVhYANeireHEvY9GVjv3l8FnCUiO9zn8a5P64GlIuLvZ3Q4atjI0JgxrDkUwe8TSvIG/kO+qjifGRWFbKxro6axg72tYY6bXNYbWLJJDo0MrwB+paqzVHW2qs4AtgMzjvSE7pngDUBPjcGfAVeLyDIAERkP/BfwXREpA84GZrrrz8Z7xniVqm7Du536zZ5JNW7W6jsZhSwYGjOGNYciVBQE0n7et2RKGbG48tLOA5TmB1g4YfRUsB+MgoAPISeSdV8FPNCn7X4OBrIj9SBQJCJnq2ot8EHgf0VkE97zwDtV9U/A5cCTqpq4EPUh4F0ikg98ApgEVIvIOuBuRqiS/UCshJMxY5Sq8se1tcyoKOTUmZVpH7dy1wG2NnTwlrnjmVqePTNI+3poXS0TS/M5Y9a4Izk8e2YLmbTYM0NjxqhwNE53LD7g88K+TpxWwexxRVQV52eoZ8MjB9camqOQsdukIjJDRFa4bAbrReQ61/4NEdnjMh2sEpGLEo65UUSqRWSziFyQ0H6ha6sWkRuSXc8YMzi9mWcKBvc3sd8nWR8IwYKhOVQmR4ZR4Auq+pqIlAKvisjjbtuPVPX7iTuLyGK8BaPHAVOBv4vIQrf5Z3gZDnYDr4jIw6q6IYN9Nybn9eYkHeTIMFcU5fmpa0+eVceMPRkLhu6ha6173yYiGzmY0SCZS4F73YPY7SJSDZzqtlWrag2AiNzr9rVgaMxRaA5FKAz6yA9k32zQoVAY8BGJKdFYPGvSyJnMGZafABGZDZwIvOSaPiMia0TkThHpeXI/DdiVcNhu15aqve81rhGRlSKysr6+foi/A2NyT3M4clilirGkMC9nlleYIZDxYOjy5t0PXK+qrcDPgXl4aYtqgR8MxXVU9XZVXa6qyydMmDAUpzQmZ8VVaR0gJ2mu61lrmAPLK8wQyGgwdCVA7gd+rap/BFDVOlWNucSt/8vBW6F7OHSh6HTXlqrdGHOE2sJR4grlYzgYFmUgC81IEZHJInJvQqmkR0VkoVvb13ffu0XkCvf+KRHZmVhpQkQe7Cmv1Ke002oReUFEjhm+72z4ZHI2qQB3ABtV9YcJ7VMSdrsc6Pmf9TDwfhHJF5E5wAK8zOmvAAtEZI6I5OFNshmxZK7G5IJ007DlslzJQuN+1z4APKWq81yppBvxFrunoxl4kztXBTClz/ZtLn/oUryE3V8amp6PLpmcTfom4EPA2oTM5F8CrnJpfRTYgZfpHFVdLyL34U2MiQLX9uSzE5HPAH/Fy7t3p6quxxhzxJpDEQQoyx+7wTDo9xHwSdYHQ+BcIKKqv+hpUNXVbq5GOu7FG2Q8B7wb+COuIkUSZcCBI+7pKJbJ2aTPkTxLw6P9HHMzcHOS9kf7O84YMzjNoQhlBQH8vrGdSKUw6B+yZ4azb/xzRko47fjOOwdKAH488OpRXOMJvFRrfrygeA3w1YTtPdUsSoEivPJOOcfmExszBjWHxvbkmR628B6AGN6o8P1Aoaru6LO95zbpPOB64PZh7t+wsHRsxowx3dE4nZHYmF5W0aMw6Keho2vgHdOQxgguU9bjVa84GvfiPXf8xgD7PQzcdZTXGpVsZGjMKNLWFeWvm+p6s8NkQotNnulVFPQRisTI8oIFTwL5InJNT4OILGFwZZyeBb4D/HaA/c4Ctg26h1nARobGjCIb9rXSFIqwZm8Lb55XlZFr9OYktWBIYdBPXKE7Fs/aTDyqqiJyOfBjEfkPIIw3OfF64BgR2Z2w++dSnQP4frJtHHxmKEA3XlmmnGPB0JhRorM7xo4DnRQEfOxpDdPQ0ZWRhNjN4QhBv/SusxvLSvIDlBcEicSU/Cz+baiqe4H3JdmU7C+e3yccd06K85W4rzuA7K3TNQh2m9SYUWJzfRuqcO78CeQHfKytbc3IdbyCvsG0C/rmsmnlhVx07CRKsjkSmiFhwdCYUaA7Gqe6oYOZlYVUFAZZPKmUfW1d7G8bmskdPVTVZpIak4QFQ2NGga0N7UTjyrETSwGYX1VCYcDHmtqWIZ3c0dEdIxpXC4bG9GHB0JgRFo0rm+vbmVKaT2VRHgABn3Dc5DLqO7rZN4SjQ0vDZkxyFgyNGWHbGzvoisZZPKnskPa544spzvOzdghHhy291e0tGBqTyIKhMSMorsrG/W2ML8pjQkneIdv8bnTY2Blhb+vQVGRvDkUozvMTtGK2xhzC/kUYM4J2NYfo6I6xeFJp0tmdc8YVUZIfYE1t65CMDpvHeA3DXCQiMVdiab0rs/QFEfG5beeISIvb3vN6q9v2ZXfMGtd+mmsPisgtIrJVRF4TkRdF5B1u2w4RWZtwrltd+90iskdE8t3nKrfvCQn7NonIdvf+7yPzXyu1AecTi0gxEFLVuIgsBBYBf1HVzKXIMGYMUFU21LVRlh9gWnlB0n18IpwwuYwX32hiV3OImZVFR3y9WFxpC0eZUT4mlo2NJSFVXQYgIhOB3+BVl/i62/6sql6ceICInAFcDJykql0iUgX03Jr4Nl4Zp+PdtknAWxIOP1dVG5L0IwZ8DK+AOwCquhaXvFxE7gYeUdU/HM03mynpjAyfAQpEZBrwN7yyTHdnslPGjAX72rpoDkU4NsWosMfMykLKCgKsrW0lfhSjw5ZwBMUmz+QyVd2PV3XiM9LfD5UX7BpUtcsd16Cqe0WkCPhn4LMJ2+pU9b40Lv9j4HMikpWLNtPptKhqp4h8HLhNVb+bUJ/QGHOENtS1URj0M2uA0Z5PhCVTynhuexNvHOhkzrjiI7peTxo2C4aZ8acd38tICad3zf73QSUAV9UaV45poms6u8/v7PfgDWy+JiJbgL8Dv1PVp4H5wE5V7S/jwwoR6Sn1cY+q/si934lX/eJDwJ8G0+fRIK1g6IbUHwA+7tosj5MxR6Gho4v97V2cOK08rZqC08sLqSwMsq62lVmVRfiOIHtMcyiCX7BsK2PPYbdJAUTkZOBsvOLAvxORG4DX0jhfqtuk4CX7fgj485F2dqSk86/iOuBG4AFXjX4usCKz3TImt22sayPoF+aNT2+UJyKcMKWMZ2oaqWnsYH5VyaCv2RKOUF4QPKJAagY22BFcprjf0TFgP3Bsqv1UNQY8BTwlImuBjwD3ATNFpGyA0WGqc251o9BkeVJHtXSeGU5S1UtU9b/AG4LjlfswxhyB1nCE3S1hFlaVDGqJw9SyAsYX5bF+Xxux+OCfHTaHIlapIseJyATgF8BPtZ/pxyJyjIgsSGhaBryhqp3AHcBPRCSv55wi8t5BdONm4N8G3/uRlc6/xBvTbDPGpGFjXRt+gYUTBje6ExGWTC2jMxJjW2PHoI4NR2KEo3F7XpibCnuWVuA9//sb8M2E7Wf3WVpxBVAC3CMiG0RkDbCYg4V9vwLUAxtEZB3wCJA4SlyRcK5f9u2Mqq4nvduto0rK26RuXclFwLSetSROGRDNdMeMyUU9ZZrmjS+m4AhKKE0qyWdiST7r97Uyd3wRAV96I8veNGyWeSbnqGrKHyRVfQooT7H5zBTHdANfdK++22anOObqPp/fPdA+o01//5L2AivxCkW+mvB6GLgg810zJvf0lGla5BJyD5a4maXhaJyt9emPDm0mqTH9SzkyVNXVwGoR+Y0tsDcmufauKM2hCOOL8ygcYKSXWKbpaGZ0TijJZ0ppPhvq2phfVZzWc8fmUISCgO+IRqPGjAXp/Is8VUS+Acxy+wugqjo3kx0zJhu8+EYTDR3dAJTk+akqyWdCcR4TivMpKwgcspi+b5mmo3HC1HL+tnk/K6obOGl6OVXF+f3u32KTZ4zpVzrB8A7gc3i3SGMD7GvMmNHY0U1DRzeLJpZQGPRT395FbWuYHU2dAOT5hapiLziOL87zyjSVFfSWaToa44vyOH1WJav2tPD4lnpmVBSydGo5pUlGnHFVWsKRI1qOYcxYkU4wbFHVv2S8J8ZkmS317QR8wvGTywj6fSyaWIqq0t4Vpb6jm/qOLhrauw+pOLF4CEaFPeaMK2Z6eSGb9rexcX87e1pCLKgq4bjJZeQHDt46be+KElN7XmhMf9IJhitE5HvAH4HeKqOqmnVTZ40ZKqFIjJ3Nnczvs1ZQRCgtCFJaEGSuW1DfFY1R39FNNKaHlWk6WkG/jxOmlDOvqoS1tS1srm+npqmD4yeXsaCqBL9PbPKMMWlIJxie5r4uT2hT4Lyh744x2aG6oYO4wsKqgTPI5Af8TM9wpYiioJ/TZo5j4YQSVu1p4fU9LWypb2fZ1HKaQxEEKLNlFTnJ5Qldm9B0r6reIiJPASWqutzttxz4vqqe0+f42cBGYDNe5YqVwMd7Jk6KyFnAD/GW1QH8UFVvd9vupk8lChFpB84AfuWaZgIt7tUAfCLheiSc87A1i8NpwGCoqucOR0eMyRaxuFLd0M7UsgJKR1mAqSzM49z5E6htDbNqTwvP72hCgNL8AIE0cqCarNRbwimJiSLyjjQedW1T1WUuwffjeOnUfi0ik/FKQl2mqq+5Uk9/FZE9qpoy/2h/pZtc8N3WT59HxIBzskVkkojcISJ/cZ8XuwoWxoxJO5s7CUfjg84gM5ymlBVwwaKJnDazksKgn0ml/c82NTnre8CX093Z5St9GZjmmq4F7u55LOYSdH8RuGGI+zni0rlNejdwFwf/g24Bfoc3yzQlEZkB/BKYhHdb9XZV/YmIjHPHzwZ2AO9T1QOu9tZP8LLedAJX9/wPEJGP4KUIArhJVe9J8/szZkipKlvq2ynLDzB5lAcYnwhzxxf3Prs0mbX8nhMyUsJp5UfWDpQAvLBPiabvqOrv3PsXgctF5FygbaCLiUgB3qOx61zTcUDf37crXfvRmNenz59V1RHNeZ1OLqcqV9gxDqCqUdJbYhEFvqCqi4HTgRCo/akAACAASURBVGtFZDHeXxRPqOoC4AkO/oXxDmCBe12Dq5bsgufX8f4HnQp8XUQq0/v2jBlajZ3dNHVGWDihpN+CvMYMo5CqLkt4/a7P9ps4OJhIpSc41QG1qromzWsnSwaeThb5bX36POLFH9IZGXaIyHjcNygip+M9CO2XqtYCte59m4hsxBt6Xwqc43a7B6+EyH+49l+6TOv/EJEKEZni9n1cVZvc9R8HLgR+m963aMzQ2VLfTtAvzB7Xf0FeM/akMYIbEar6pIjchDcoSaXnmWEV8LyIXKKqDwMbgJPxahT2OBlY7943Ar2DEzd4SVXrcFRLZ2T4ebx8pPNE5Hm8W5+fHcxF3APTE4GX8EpC1bpN+/Buo4IXKHclHLbbtaVq73uNa0RkpYisrK+vH0z3jElLZ3eMnQdCzB2XXgo0Y0aRm0iSeLsv90zwBg5WJvoZcLWI9EyGGQ/8F/Bdt/0p4Mqeck/A1WRpvdt0ZpO+JiJvAY7BS8W2eTC5SkWkBLgfuF5VWxNvLamqisjgC7Ml7+ftwO0Ay5cvH5JzGpOouqEdZfCll4zJsL7PDB9T1UMmuKjqoyKS7ijhQeAbInK2qj4rIh8E/ldESvFiwI9V9U/uvI+IyMnAq26JxzbgU2lco+8zwztV9daUew+D/ko4HVaCw1koIqjqHwc6uYgE8QLhrxP2rxORKapa626D7nfte4AZCYdPd217OHhbtaf9qYGubcxQisWV6sYOppUXHFWSbWOGWqoSTn3XE6rqySn22wEcn/BZgaUJn58BTunn+t/k0PqJfbdfneR6mV14ewT6+1f9Lvd1Il7dqyfd53OBF/Ay0qTkZofeAWxU1R8mbHoY+Ahwi/v6UEL7Z0TkXrzJMi0uYP4V+M+ESTNvx4oLm2H2xoFOukb5cgpjzJHrr4TTRwFE5G/A4p7nfG40d3ca534T8CFgbcJw+Et4QfA+t1bxDbzFnQCP4i2rqMZbWvFR148mEfk28Irb71s9k2mMGQ49yynKCwJMKhndyymMMUcmnfs9MxImvIA39XbmQAep6nN495eTOT/J/oq3wDPZue4E7hy4q8YMvYaObg6EIpwyo8KWUxiTo9IJhk+4W5U9SxmuBP6euS4ZM7psrm8nzy/MrrTlFMbkqnRmk37GTaY52zXdrqoPZLZbxowOHd1RdjeHOGZiCQFbTmFMzkprWpybCTrg7FFjcs3Whg7AllMYk+tS/qkrIs+5r20i0prwahOR1uHrojEjIxpXtjV0MK28kOI8W05hRidXMinVth+LyB4R8SW0XS0icRFZktC2ziVHQUR2iMha99ogIje5nKWIyGwRWefenyMiKiLvSjjPIyJyjnsfEJH/FJGtIrLKvZImDU+45hoReVpEZiVsmy4iD7nzbBORn/Qs8nd9eCTJ+Z4Sr2RV2lIGQ1U9y30tVdWyhFepqpalOs6YXPHGgU66Y3GOsVGhyUIuAF6Ol8HrLX0276b/ahbnquoJePmg5wL/k2K//s5zEzAVOMGVazob6K/m2bmqugRvHflX3PcgeHclH3T5rBcCJcDN/ZzniKRTwul0l3mg53OpiJzW3zHGjEbRWJx1ta1s2NfK3tYwoUjqfPOqypb97VQUBIe8Or0xw+QcvByiPweu6rPtEeA4ETmmvxOoajteRpnLXN7RvlYDLSLytsRGESkC/hmvGkXYnatNVb+RRr9f5GDKzfOAsKre5c4RAz4HfMxdY8ikc+/n58BJCZ87krQZM6p1dEd5tqaRA6FDMwnmB3xUFgapLAxSUZhHZVGQ0vwA9e1dNIcjnDqz0pZTmLRE//f2jJRwCvzzNUeaAPwqvFUAD+ElLgkmpNKM4+UX/RJe8pOUXBrN7XgVheqS7HIz8G28osA95gM7VXXAslFJXIiXEg68UlGvJunPTneNIZNOMBS3BrCnI3ERsQcoJms0dHTxbE0j0bjylrnjqSrOpzkc4UCnt36wORRhc307cfdT7hch4Bfy/D5m2XIKk4XcM7WLgM+7qkEvARfgjQh7/Ab4sojMSeeUqTao6jMigoic1U9/PopXI3E8cKaq7kqy2wo3+mwHvppGn4ZUOkGtRkT+FVdfEPg0UJO5LhkzdHY0dfLSziYKg37Omz+B8kLvkcXEknwmJmSTicWV1q4IzZ2R3gA5s7KQgM9GhSY9RzGCy4QLgAq8DGAARUCIhGCoqlER+QFeCb2U3GOy2XiF3ctT7HYz3nO+qPtcDcwUkVJ3e/Qu4C43+SZpLlW8VJ/NwK/xcp1+Hq+E1BV9+lOGl/ilGu+Z5pBIZ+HUp/Byk+7Be1h6Gl7xXWNGLVVl9d4WXnyjifHFeVxwzMTeQJiM3ydUFuYxZ3wxJ02v4LwFE5hfZRNnTNa6CviEqs5W1dnAHOBtSZ6z3Q28FZiQ7CSu6tBteBNYDqS6mKr+Da+u4RL3uRMvN/VPE2ai+oF+H8C74vHXAx92o8QngCIR+XDCOX4A3O2uMWQGDIaqul9V36+qE1V1kqr+k6ruH+g4Y0ZKJBbnue2NbKhrY974Ys6dN4H8QKo/Ro3JekUisjvh9SW8525/7tlBVTuA5zhYgKGnvRu4Fa8gQ6IVbhT3MrAT+GQa/biZQysPfRmvwPs6EXkdeBavoPve/k7i0n/+FrjWPaK7HHiviGzFG52G8Z519ji/z/d/hmv/c0Lb7wfqvCQ8Dky+g8gEvFlBs0m4raqqHxvo5CNl+fLlunLlypHuhjlKjR3dbNrfRlVxHhNL86koCA44maWjO8ozNY20hCKcOK2chRNKbAKMyQT7ocox6TwzfAgvov8dSD0X3ZghtnpvC/vbu9jZHAIgz+9jUqn3rG9SaT5l+YFDAl1DRxfP1DQSjytvnlfF1LKCkeq6MSbLpBMMi1S13wesxgy1llCEuvYulk4tY1ZlEXVtXdS1d7G/rYtdLjgWBHy9gVEVXtvTTFHQz5sXTKC8oL+1vcYYc6h0guEjInKRqj6a8d4Y42ypb8cvMG98MfkBP3PHB5g7vhhVpb07xv62Luraw9S1HRw5TizJ56w54+z5oDFm0NIJhtcBXxKRLiCCd69cLSWbyZTuaJztBzqZVVl0WGATEUrzA5TmB5hX5QXHtq4obV1RppQV4LPng8aYI5BOCafSgfYxZijVNHUQi2talSJEhLKCIGV2W9QYcxRSBkMR6Tfdmqq+NvTdMWNdXJWt9e1MKM6jsshyghpjhkd/I8Mf9LNN8RKoGjOkalvDtHfHWDo1VaILY0wiEWlX1ZI+beXAf+MlTBHgebyk2S1u+0Lgx3j5Rtvwsrl8VlXr3PYfA+8FZqhq3LVdDSxX1c8Mx/c13FIGQ1U9dzg7Ygx4E2cKg36mVxSOdFeMyWZ3AOtUtSdzyzeB/8NbvF6AtyD/86r6J7f9HLwsNHVJSj+tGP7uDz9LuG1GjdZwhH1tXSyZUmYTYYw5QiIyHzgZuDKh+VtAtYjMwwtwL/YEQgBVfSph33PwSj/9Di+tmwVDY4bTlvp2fG45hTHZZve0GRkp4TR9z67BJgBfDKxytf8Arw6giKzCK4l0PH3KIvXRX+mnnJUyN6mIvMl9zU+1jzFDJRKLs72pk5mVRRQEbZ2gMSMhofTTg6raCvSUfsp5/Y0Mb8Ubar+IFfI1GVbT2EE0zeUUxoxGRzCCy5QNwDIR8SVMfvHhjVo34D0bfEuKYwcs/ZSr+guGERG5HZgmIrf23aiq/5q5bpmxRFXZ0tDB+KI8xttyCmOOiqpWuyoRX8F7Voh7/5rbtge4UUTeqap/BhCRNwNNHCz99FvXXgxsT1L6Kef0V8LpYuBJvHIZryZ5GTMkalvDtHdFbVRozJHpW8Lp88DHgYUisk1EtgELXRuqGsL7/f5ZEdkqIhvwira3MXDpp6v7XGv6sH2XGZZOCaelqrp6mPozJKyEU3Z5alsDBzq7ueS4KfitsrzJDvaDmmPSqXTfKCIPiMh+97o/l/4aMCOrLRyhtjXM/KoSC4TGmBGTTjC8C3gYmOpef3Jtxhy1LQ0d+ATmV9lyCmPMyEknGE5U1btUNeped+PNRuqXiNzpRpLrEtq+ISJ7RGSVe12UsO1GEakWkc0ickFC+4WurVpEbhjk92dGsUgsTk1jBzMqCim05RTGmBGUTjBsEJEPiojfvT4INKZx3N14D2P7+pGqLnOvRwFEZDHwfrwFoRcCt/VcD/gZ8A68haRXuX1NDtje1GnLKYwxo0I6wfBjwPuAfUAtcAXw0YEOUtVn8KbqpuNS4F5V7VLV7XhJY091r2pVrVHVbuBet6/JcuqqU4wrClJVbHkdjDEja8BgqKpvqOolqjpBVSeq6mWquvMorvkZEVnjbqNWurZpeElhe+x2banaDyMi14jIShFZWV9ffxTdM8NhX1sXrbacwhgzSqQzMhxKPwfm4WVCqKX/MlGDoqq3q+pyVV0+YcKAjzTNCNtS305+wMfMipxfy2tMRolIzM3BWCciv+9ZIC8iARGpF5Fb+uz/lJuHsVpEXhGRZQnbdohIlXt/sohsF5ETReRqd65VCa/FIjJbREIi8rqIbBSRl12pp6wzrMFQVetUNeZSBP0v3m1QgD3AjIRdp7u2VO0mi7V3RdnbGmb++GJbTmEyQuvqiK9fP9LdGC4hNwfjeKAb+JRrfxuwBa9sU99/aB9Q1aXAbcD3+p5QRJYAfwCuVNXXXfPvEuZ7LFPVDa59m6qeqKrH4s39uF5EBnyUNtoMazAUkSkJHy8HemaaPgy8X0TyRWQOXsHJl4FXgAUiMsclkH2/29dksS317Qgwv8pukZrMiL34AvEXnkc7Oka6K8PtWWC+e38V8BNgJ3BGiv1f5PBHT8cCDwIfUtWXB3NxVa0BPg9kXbrOAUs4ichXVPUm9z5fVbvSObGI/BavLlaViOwGvg6c44bkCuwAPgmgqutF5D68JLJR4Nqe8iMi8hngr4AfuFNVx8yfe7mosztKdUM7s8YVUZRnyynM0NPGBnDzBnR7DXL8CcNy3fhT12ekhJPvnB+nlQBcRAJ4M+8fcwV834r3O7YCLzC+kOSwC/ECX6KHgA+q6nN92q8UkbMSPqcKsK8Bi9Lp82iSMhiKyH8Az+DNHr3JNaddwUJVr0rSfEc/+98M3Jyk/VHg0XSuaUa/tftaUeCEyWUj3RWTo+IbN4HfDyUlxLfV4BumYDiCCl2tQvBGhncAlwArVDUkIvcDXxWR6xNqHP7a3W0r4fAA/nfgEyLy18SaiHi3ST+TuOPhd1+95qP8fkZEfyPDTcB7gbki8qz7PF5EjlHVzcPSO5NTWkIRtjd2snBCCSX5VlfaDD2NRNDqrcjcuUhFBfFXXkHb25GSzN+ST3cElwEhVT0koInIVcBZIrLDNY0HzgMed58/gFdw4XvAfwPvTjj8M8Av8J4nfvII+nMisPEIjhtR/T0zbAa+hLfm7xy8e88AN4hIsuG2Mf1aXdtCwCccN7l0pLticpRu2waRCL5jj0XmzvPaampGuFfDS0TKgLOBmao6W1VnA9fi3SrtpV6Vhq8Cp4tI4m3NOPBPwCIR+RaDICKzge/jBdis0t+f5xcAX8NbCvFDYA3QoapZN0vIjLz69i72tIRZMqWM/IA9KzSZEd+0ESorYeIk7xZeVRXxmm34liwZ6a4Np8uBJ/vM73gI+K6IHJLhwt1G/QHw77gST649LCKXAE+LSB3QweHPDD8N7AXmufqJBXhloG51aTuzSspgqKpfAhCR1cCv8J4VThCR54ADqvquVMcak0hVWb23hYKAj2Nskb3JEG3wJs74zjiz91mWb+484i+/hLa2ImW5+ZxaVUv6fL4HuKdPWxMHc0qf02fbDxLez05438KhzxPvTtGFwkF2eVRKZ2nFX1V1pareDuxW1bNIIx2bMT32toap7+jmhCllBPzDnefBjBXxjRvB70cWLOhtk7lzgbF3q9QMXjrp2L6Y8PFq19aQqQ6Z3BJXZdXeFkrzA8wdb2WaTGZoJIJuq0bmzkPyD94JlNJSmDiReM22EeydyQaD+jM92yrem5G3o6mT1nCUpVPL8CWfhm3MUdNt1b0TZ/ryzZ0LjY1oc/MI9MxkC7tnZTImGlfW1rYyvijI9PKceKxgRqn4xp6JMxMP2yZz7FapGZgFQ5MxW+vb6YzEWDq1PNXiXGOOmtbXQ0ODt5wiyc+ZlJTApEl2q9T0y4KhyYjuaJwNda1MKStgUmnBSHfH5LD4JjdxZv7BiTOs/B944GpQBbxZpRw4gB44MDKdNKOeBUOTERvq2uiOKUun5OZ0djM6aHc3um0bMi9h4sy2v8OfPw2r74GdXnrNnlmluTY6FJHxCSWV9onInoTPE0UkIiKf6nPMoMo0uf2OE5EnXemnrSLy1Z5KGEmO+6Vrv9udu6f9sOTdA5STau+z79Ui8lP3/hsi0ikiE1PtP1gWDM2Q6+yOsqW+jdmVRVQW5Y10d0wO6804s8hNnGneCfdfBVWLoKACXrkNACkqQqZMQWtqUDdazAWq2thTUgkvhdqPEj6/B/gHfTLP9Ei3TJOIFOJVC7pFVY8BlgJn4i26J8lxH05o//eE9ltTfBv9lpPqRwPwhUHs3y8LhmbIrdvX5iXjtlGhybD4po0wbpw3cSbaBfdd4X298gFY9lHYcD+07QPw0rM1N0NT0wj3ethchRcsponI9D7bBlOm6Z+A51X1bwCq2omXv/SGIe5vsnJS/bkTLyvOuKG4uGVLNkOqJRyhprHDknGbjOudOHPmm7yJM3+5Dva+Alf+EaoWwvJPwT9+BK/fAW/+MjJnDrzwPPGabfjHjx/6Dn1DMlLCiW/ooBOAi8gMYIqqvuzK410J/CBhl8GUaToOL6l3L1XdJiIlLg9q3+N+oqp3ufffE5GvuPcfUtW1/XQ7WTmp/rTjBcTr8EoEHhUbGZohtWZvC35Lxm2GQe/EmQUL4PW74NX/gbNugGMv93aoWghz3wYrfwGxKFJYiEydmnO3SlO4ErjPvb+Xw2+V9pRp6psouO9t0lCa10s87q6E9sTbpKkC4a9FZDvwZeBnA1yn7/+4W4GPiMhR/8KxP93NkKlv72K3JeM2w0C7u9Hqam/iTMM6eORfYM75cO63AXixppHVu5r51Cmfht9dDlsegWMvQ+bOQ599BhoboapqaDt1BCO4DLoKmCwiH3Cfp4rIAlXd6j4PpkzTBuDNiQ0iMhdoV9XWIVg2laqcVEhE8lS1230eh/ecsJeqNovIb/CqchwVGxmaIdHQ0cUruw5YMu4spnV1xF99Fd2/f9SPnHRbNUSj+OZMgfveA8UT4Irfgj9AZ3eUz/1uFbc8toldE86DsukHJ9LMng0ixLfl1qzSRCKyEChR1WkJJZy+w6Gjw8GUafo1Xm3Et7rzF+KNyL47VH1OUU7qaeCDCdd8H7AiyeE/xAvoRzW4s2BojkpjRzdPVdfz+JZ6wtE4p86stGTcWUhViT33LPHXXiX20IPEfv3/iD37DPGdO9FodKS7dwhVPZhx5pnPQdteeN/9XkAEfvF0DftawwA8uKYOTv4k1DwODVuQggJk2vRcv1V6FfBAn7b7ObyeYRi4BLhERHpGVlf2WVpxprtVeinwFRHZDKwFXgF+OpSddtfpKScF3rPAd4vIKrxZsb9X1WeSHNeA9/3m9902GJKLPxDLly/XlStXjnQ3clpTZzfralvZ0xomz+9j8aRSFlQVWyDMUlq7l9gjj+A77XQoKkR3vIHu3gWRCAQCyPTpyKzZyMyZSMHIJlHQ+v3EHnwQX8VqfOtvg4t/Acu9O327D3Ry/g+f5oLjJrOvNUxDexdP/PMxyI9mwamfgQt/SHzLZuJPP43/0suQJOnb0mQplXKMPTM0g9IcirC2toXdLWHy/MKSKWUsnFBC0IJgVouvXw/5+cjixUggAPMXoLEYuncvuvMN9I030B07QAQmTcI3bTrk50EgAP6A9zUQ8I4NBMDv974Gg0MePOMbNyGRDcj6n8Oyq+Hka3q33fLYJkTghgsX8czWem7441rWNBeydPF7YNVdcN5NyKzZ4HvWm1V65MHQ5BgLhiYtLeEI62pb2dkcIugTjp9cxjETS8izIJj1tL0d3bEDOeEEL5g54vcjM2bAjBnomW+Cxkbib+xAd7xB/NVB3HkpKUWmTOl9UVp6xLlqtbsb3fQi/qY7kMlL4Z23eQEaeHl7E4+sqeW68xcwtaKQdxw/ha89vJ4HVu1h6SmfhnX3wrp7kZM+hkx3t0pPO93y5hrAgqEZQCyuvLLrANubOgn4hOMmlbJoYil5AQuCuSK+aSOo4lswF2pfh/JZUFjZG2QAL2BUVeGvqoKTl3vPESMRiEYhFvO+RqNeeyza+5muLrSuzhtdbt3inay42AXGqV5wLCsbMCBpLAbd3ejG1fjrf+aNPN93PwS9aijxuPKtR9YzpbyAT715HgDlhUHeumgif1q9ly+/4zyCE4+HV34GJ37Um1W6cyfU1cHkyZn5D2uyigVDk5Kq8o83mtjZHGLRxBIWTyq1JRM5RmMxdNMmZNoE5L4LYZ/LypVfDuPmQeVcqHRfez6XzTh4O7SPVCFNVb1E2bW1aO1edPdudOtW0G4oABlfDBqGcAsSbka7WqC7DYm0QaQdYh2gISTagERr0X96BMbN7T3/H17bzbq9rfzkymUU5h38Gb3sxGk8um4fz1U3cu4pn/Zylu55GZl1Ivj9xGtq8FswNFgwNP1Y626LLp1axuJJllotF+n2Guhsx9d1D9StgQt+BBqHA9vgQA3sWw2bHoJ45OBBvgCUToNgEQTyIVBw8OVP/JwP/jzobkfCzV6g62qBcDMaboGuFiTuZqpuT9E/8UOgGIKlkF8G+TPQJTciC9/Zu09bOMJ3/7qJk2dVcsnSqYccf87CiVQUBnlg1R7OvfyD8PgX4ZXbkMvvQWbMQLfXoKefjvjsTsdYZ8HQJFXT2MH6ujbmji/i2ImWTSZXxdetwxd6ADnwxCGzMg/dKQatu73g2OSCZOsuiIa9PKDRsPcKNR1839Me64a8Eigo9xJnl0yBqmORgnJv9FlQ4W1L8V6CRYfcrk3mpyuqaWjv5s6PnHLY7da8gI+Ll0zhD6/tpv3yEyhZ+mF47Q54+w+QuXO9SUF1+2DK1OQnN2OGBUNzmLq2MK/sOsCkknxOmVFpEwxylNbXIzW/wdf6OLzpi8kDIYDPDxWzvNecczPSl7rWMJVFeYN+Fr2joYO7nt/BFSdPZ8n0iqT7XH7iNP7fSzt5bN0+rlj+L94C/FV3Iade790q3VaDP0uDoYiMB55wHycDMaDefX47sAf4rKr+wu1fCqwCLlTVrSISBF4DPqGqL4lIu6qOyawZdm/AHKI1HOG57Y2U5Ac4a854fBYIc1Z8xW34W/+ALnoPnP8dYnElHIkNax/2Nof49z+s5oxbnuDS255na13boI6/+S8bCfqFL779mJT7nDSzkpnjinhw1R6YdDzMejO88nNvtuzMWeiO7Wg8frTfyogYbAknVW0DbuTggvl/A15Q1ZeGueujjgVD06srGuPpbQ2ICG+ZW2UzRnOYVj+Fb+PNaPnxyHt+BT4fX/j9Kk65+e/833M1RGKZDQ4toQjf+ctGzv3BUzy0ai/vPXkGda1hLv7pc/zqxR1pZYd5vrqBxzfUce2585lYlnoto4hw2bJpPL+tgX0tYTjlWmjeDtWPeUV/IxGvtFPuSVrCSVXvAxCRLwKfwguOY57dJjWAt4TimZpGOiMxzl8wwcov5bKmbXDf5eCrgPf9EYKFPLV5Pw+u2suscUXc9OeN/O6VXXzzkuM4c97QJrMOR2Lc8+IOfraimrauKJcvm8bn37aQ6ZVFfKEtzL/9fg1ffXg9KzbX890rllBVkjzDVjQW51uPbGBGZSEfe9OcAa97+YnTuPXJrTy8eg/XnHkZlEz2JtK8/yH8H/wQEgwe9ff2yp82ZqSE0ynvOjYTJZyuAzYC16jqmCnw2J+M/ekvIneKyH4RWZfQNk5EHheRre5rpWsXEblVRKpFZI2InJRwzEfc/ltF5COZ6u9Ypqq8tLOJho5uzpg1jqrio0rxZ4aBhsPEnn6K+K5dgzuwsxH99UUQjRJf/G1k2gLCkRhfe3g9cycU87fPvZn/+/BywpEY//R/L3Htb15jT3O6VXxSi8WV+1bu4twfPMV3/uLN/Hz0s2fzw/ctY3plEQATSwu4++pT+PrFi3luWwMX/uQZVmzen/R8v315J5vr2vjyRcdSEBx4uc+cqmKWzajggVV7IZAHJ/0zbH0Uad05JIFwFBqohNOFQC1w/HB2ajTLWG5SEXkzXvHFX6rq8a7tu0CTqt4iIjcAlar6HyJyEfBZ4CLgNLzikKe5CsYrgeV4daxeBU5W1QP9Xdtykw7O2toW1u1rY8mUMo6bbEso0haPwUMfgz0vw1u+Dse9D4Zhir62thJ77C/Q0gJ+P/6L3omks1YuEoZfvQ3d/TKxcdfhe+e/4Jszhx8+vplbn6zmN584rXckGI7EuP2ZGm57uhpBuPbceXzirLlpBZ5D+qrKE5v2892/bmJLXTtLp1dwwzsWccbc/ovrbtrXynX3rmJzXRtXnzGbG96xqPfaLaEI53x/BYsml/GbT5yW9gSve17Ywdf/tJ7HrjubRYWt8OPZcOa/wdtuGdT35Iy6h+ki8g28skrfF5FX8SbU9KyJmQoc5ybNTAWewyvLtAJ4j6quceewCTRDzWUX7zv8vhS4x72/B7gsof2X6vkHUCEiU4ALgMdVtckFwMfx/qIxQ2R7Uwfr9rUxZ1wRiyfZEoq0qcJf/hVW/xIiIbj/Krj9ZNj6mLctU5etryf28EMQDuN729uhuITY3/6KNg1wpyseh4c+CjufQ2dfB+OWIrNmsa2+nZ8/vY3Llk095JZoQdDPv56/gL9/7i2cc8wEvv+3LVzw42d4YmNdv5dpCUV4Mb0D2AAAIABJREFUfecBfv/qLm55bBPv/vkLfOKXK4nGlJ9/4CQe/PSZAwZCgEWTy3jo2jfx0TNnc/eLO7j0Z8+zaV8rAD/++xZaQhG+dvHiQc10vnjJFAI+4YHX90D59P/P3nnH11Gd+ft5Z27XVa+WLcuWbdwAg7HBFGPTIQVSSAHCppP8EhKy6XWTTTZ9Nz2bbDpJCCGV0EIoAUKxAVdwtyVX2epdunXm/f0xo2JbLnKXfB5/jufMmZkz59yrO9857X1h+vWw8ufeS8IY4jBcOH0b+Iqq7gI+DPxQzJTxEz5mWK6qe/x4A1Dux8cDQ/t7dvlpB0rfDxG5DbgNYOLEicewyGOXpp4UL+xop8wsoRg5T33Rm6J/8Sfgiq/Amrvhn5+Du66D6kVw5Veh6sJjekt3xw7cxx8DacIu2Irc8xHECqFuAXrnnXDuVci4s6BkOhRMAntI998Tn4M1v0cv+g/c7eOxzp4FInzub2uIBG0+84pZw95zQmGMH91yHs9saeEL96/lnb9exmXTS7njijPoSmSobe5hS3MPtc091Db30tydGrg2aAs1JXG+/JozeeO8qhEbc48EbT7/6tksOqOUj/7pJa7/4bO865LJ/Hrpdt48fyIzx42sF6M4HmbRGaX8bdVuPnHNDKz574MNf4V1f4I5bxlRXqc4B3LhdI+ILAEmAj8HUNX7ReTdwL8x2FA5LTmuLpxEZBLwwJBu0g5VLRhyvF1VC0XkAeBrqvqMn/448AlgMRBR1f/y0z8HJFT1vw923+PVTdral2bZznaKYiEqciOUx8OjcsalqlLfmeT5He2EAxZXn1E2Kutx0njhf+Gh98O574Drfza4KDybhhU/9YSytwmm3wBXfBnKZh/1Ld01K9DHv4eVWoL0bfIsu8x4DQSiaOM6aFqHuL2DF1gBz3Ra8XRvAftLv4G578YpuhXdtAn7ppu5b2Mbd9yzii/dcCa3Lqg+ZBkyjsudz23jO49vpic16OMwLxJgalmcKaVe6I9XFUaPmUuv1p4UH//zSzy+oYncSIAnP7KY4gNMrjkY97+0mw/cvdLrEp5cBD+cCdFieNdzI83KvDmOMU50y7BRRMap6h6/G7R/dLweqBpy3gQ/rR5PEIemP3kCyrkfqsqyne10J7N0JbNsaelFwBPGvDAVuRFKckKn9Lo8VWV3V5KX93TRnsiQGw6waIpZQjEi1twDD93udbG96v/2to4SCMH574c5b4Wl34Hnvgk/Ohvm/Bss/oK3aH2E6J6V6MNfRnY8iKVJtHgGLPwWnH0r5HjdmgK4u3fjPPAHiKewp5cg7bXQuhFaN0HbFpj5OvSqb6P3/AGpmUIXAb704DrmTCjg5vMPryclaFu8a2EN18+p5OktLYwviDKlNE5JPHTcexWK42F+9m/z+Nuq3ZTkho9ICAGumllOPBzgryvrvW7h+e+Dhz/kmZ2rmHOMS20YTZzoluE3gdYhE2iKVPXjIvJK4HYGJ9B8T1XP9yfQLAf6Z5euwJtAc9ABkuPRMtza2svSHe0sqC6kujBGS2+ahu4kDV0p2vrSKBCwhLJ4mIpcTxyjQRvbEizhpHZBqioN3Sle3tNFa1+anJDNmRV5TCqKndLifcxJdXviUDprwNvBiKh9FO56JUxYALf+49B59LbAM1+DF34AKJz9Fs8jxHAmyCIF3n44D7IJr0tz+U+Q3ctQgmj5YuS6zyLVCw9onsytq8N9/DGkuhrryqsG7W2qggjumjW4S57Dfs1r+Y/nGrnr+e3cd/slnFmZP/LPYhTzsT+t5u9rGnjx01cSdbph94sw+YqRTn46jX44pwfHrWUoInfjtepKRGQX8Hnga8AfROSdwHbgjf7pD+EJ4RagD3g7gKq2iciXgBf98754MtbEZByX1bs7KY4FmVQYQ8QTvbJ4mLPHQTrr0tiT8sSxO8XuriTQuVcetiUELMEWGYz7IRqwyQ0HiIcD5PrhWLXWGru9lmBzb5pY0Ob8qkImF49xEVSF7t3QsGrv0LbFO5473mupnfM2zzHt4VD/Ivz+tVA6E266D4JRNJHAXbUK0imsc+ciefuMYeWUwDX/DQvugCe/AGv/AOmeQ99LbFAHotU4+W+CBbdhLbjskC9UVk0NJC7Cfe453GefwbpkoXeNCKqKu24tlJWxOhnkt89v520XTjrthBC8NYd/XL6LxzY08uqzK2HKVSe7SIZTgOPaMjxZHOuW4Uu7O1nb2M1VZ5Qe1hq8nlSW5p4UacfFcZWsKo7rhay7T1yVvrRD3z5msEK2NSCM/SKZE7IJBSzCtkUoYB1U0Jp7Ury0p4umnhTRoM3s8lxqinOwrTEogr3NUPuI54uvX/gSrYPHi6ZC+RyoOAfyJ8KyH8Gupd542uX/BbNef3Bj0M0b4BeXeK22dz6LRkvRl1/GXb3K89ln26CKnHU21jnnHHzdmpOBVBckPe8NpDq9uO/NgWQnmuzBaS6EZDHWwkuxZswY0cfhvPgCumoVMncu9nnzAHB37cL9+0Nw6SJueKSJlp4Uj/37InIjY3KN3UFxXeXib/yTWePy+Plb5x9pNmPwh3R6Y8yMHILedJb1Td1UF8YOezF63BewkZB1ld5Ulu4hoSeVpaknxbb2vmGvCdpC2LYIByxCAXsg3pnM0NCdIhKwmDs+n6kl8bEngl31sP6vsP4vsP0pz+2QHYbys2Dmaz3hqzgHys6CyD4ttjm3wsb74PFPwx/fAJXz4MqvQc0V+9+ncxf89hqwbPQtD6O7O3GXPQ59fV535PzzIRTCfeF5dNVKnM2bsM6/AJkyZfiWnB2EWLEX9kHTabSuFnflSsgmsa69Eqtq5DOjrXnzcfsS6IoVuNEY1qxZ6Lq1EI1yV1OAtbu7+OHNc09LIQSwLOH6OZX8/JmttPakjnj80TC2MC3DQ/Ds1lbqO5O8clY5OaGT8+7QL5R9GYdU1iXtuEO2flrWJeWnByxhRlku00pzCIwlP21tdZ74rf+z17IDKJnptexmvMZr/R1utyd4i+ZX/wae/Dx07oCaK+GKr8J4rzVFXxv8ciHauRO97ve4tb3Q3g5lZdjnX+B5aR+CNjTgLHkOWlqgvAL7oouQkoObM1NVz+Htxo2eb0HHgcJC7EWLkdLSkXw6e+fruriPPoLu2IF1wQLc55fSN+ssLnq0i7kTC7nz7fu7Ozqd2NjQzTXf/Rf/+erZvPWiSUeSxen74Y1RjBgehKaeFI9vbubMijzOGuGaJsMxommdJ37r/+J1fwKMmwszX++1AEtnHv09MklY9mN4+svQ1wKzboSFn4YH34/uXo479QtobzHk5WHNPx+ZPPmAQqKui27ahPviC5BMIjNmYs2fj0T2NiStPT3eeZs2Qnc3BIPIlKlY06dDaekxESrNZnEefBCaGkGE/4icxZ82tvPohy6lujjnqPMf7Vz3vacJByzufd/FR3L5KSWGIvIavLWFM1V1gz95cT2wEQjhWfJ6p6pmRGQx8Dc8l8oRvEmOH/XzeRuexa8/4i13u3DIPQJ4M/zPVdXdIvId4A1Alaq6Q69X1duPd52PNaab9ACoKit2dRAL2swsPy2tE51cVL0p789/DxCougiu/h+Y+ToonHREWa7Y0c6H7lnFxVNL+OS1M8iP+t2EwQhc+CFv3eCSb8GS/4F1f0KxcIvejTrjsS6ai8yYidgHN0cmloXMmIFMnoy7Yjm6di1OXS3WefOQ6dPRHTu8VmD9Lu/8ykrkvHmewAaO7c9RAgHsa67BeehBGoJxfvdcKx++8gwjhD6vPaeSr/x9A3XNPdSUjvrf+E14JtZuwpusCFCrqueIiI1nveuNwF3+sadV9VUiEgVWishfVfXZIfk9DUwQkWpV3e6nXQms9YXQAl6LZxRlEZ5Zt1GNEcMDsLWtj/ZEhguri8ZWV+NoQBUe/YQnhPPfB5d+FnLHHfq6g/DIugY++PuV5EaC3PPiDh5f38iXbjiTa2YPsekZyUMv/RwauQSWfAsNVsGCd2LPmYOEQiO6n4TD2BdehM6YibvkOdwlz8HSJV7dcnKQuXOxpp2x/wzUY4xEImRfdQNv+e6/qCkJ855FNcf1fqOJG84Zz1cf3sC9q3bz4avOONnFOWJEJA5cAlwG3M+gGAKgqo6IvMAw1rtUNSEiq/Y9pqqu7+3izcDX/eQ3A3f78cXAWuAePAE2YjgWGVxKEaK68AjWoxmOjqe+6C1Yn/8+eMUPDj7T8zD4zdLtfP6+NZw1voCfv3UeuzsSfPzPL/Ge3y7nFWdW8IXrZ1OWG8Gtr8d99hno7ETO/jDWggVI/MAthlTW4R9rG2nqSnL+5CJmV+bvN1FJCguxrnsFun07Wl+PVFd7rcHj+IKVSDvs7kywpzPJns4ET21qZltbgrveeQHhwMgMbY9lyvMiXDylhHtX1fPvV0476q7p91/60+PiwumH/3r3oVw43QA8rKqbRKRVRM4DBqZTi0gEb/32Hfte6HsOmgb8a5h87wZ+CnxdRMJ4y98+7B+7yT/+N+ArIhJU1cwweYwajBgOw9rGbpJZl0trCk7rSQYnhWe+4a3JO+dtcN33j0oIXVf55iMb+dFTtVwxo4zv33QusVCAkniY+2+/hJ/8q47v/nMzG7Y28rMZDhPb93jjgtdeh1VVdcB8t7X0cveLO/jj8l209aYH0nMjAS6YXMyFNcVcOKWYGeW5WJYgIsikSTBp0hHXZV+aupM8v7WNHa19nvB1JAcEsDOx/zPprRdWc/HUY+ubcCzwmnPG89E/rWZ9QzezRu+8gJuA7/rxfndNPwCm+K2+ycCD/Z4pfBaKyGo8IfyOqjbsm6mqLhORuIhMB2YCz/trv0P4wqiq3SLyPJ5ThQeOVwVPBEYM96EnlWVjUzeTCmMU54ysa8xwlDz/A3jsEzD7TZ7Nz6NoPaWzLh//82ruXbWbm8+fyBevn72XncygbfG+RTXcGOsisnoFwTaXe6Wc8y+/jIml+z8UM47LY+sbuev5HTyzpQXbEq6aWc7N509kekUuS+taWVrXynO1rTzme3YojAVZUOOLY00xU8viR/xy1ZXM8HxdG8/WtvBcbQubGgcX7xfGgozLjzKhMMq86kLGFUSpzI8wLj9KZUGUstzwiF0vnS684qwKzp9cxMSi2FHndRgtuGOOb6XrcuAsEVHAxnN390MGxwxLgGdF5HpVvc+/tH/McDKwVET+oKqrhrnF3XjdozMZ7CK9BigAXvb/nmNAAiOGY4tVuzsREeachpY5TiorfgF//4Bn3Pp1vwHryB/eXckM7/3tcp6rbeVjV0/nfYv3X/Onzc04zzxDcUszjK/kgXgNX3hiJ9nvP8tHrprO2y+aRMC22NXex+9f3Mk9y3bS3J2iMj/CR646gzfOq6I8b3CG6A3njOeGc7xhl90dCZbUtXqhtpW/r/FeuguiQaqKYowviDK+wBOq8YVRJvjxwlhwoJzJjMOKHe08u6WFZ2tbebm+E8dVIkGL+dVFvO7cCVw0pZhpZblEQ0bojpRYKMDEolH9GLwR+I2qvqc/QUSeYoitZ1Vt8c1ffgq4b+jFqrpVRL6G5xhhXwfA4AngfUA+8E4/7SbgXap6t3+/HGCriBz9G8VJxCytGEJTd4rHtzRz1rg8zjRObk8cL98Nf74FplwNN/0NAt4iaFUlmXFH9LDf05ng7b96kS1NPXz99Wfz+rkT9jqu6TTuiy+i69dBJIK14MKBBfJ7OhN89t41PL6hibPH51McD/HkpmYEuGx6GbdcMJFFZ5SNyICBqrKzPcGS2hZW7+qkviPhhfYEiX2sDkWDNuMLo+RFvIXxqayLbQlzJuRz8ZQSLppawtyJBWbc79TglBg/EZEngK+r6sND0j4IXIe35KHfLrQAq/BsQNvAR1X1Vf6xKJ4pzIvxJsbstTTC72rdoKpv9gVvFzBJVbuGnPMXvMk0Ubwu2o4hxVzg+048pTFi6OOq8o+NTaSzLq+cVUFgrFlsOVVZ/1f4wxugeiHc/CCEYqgqT21q5tuPbWL1rk4mFcc4e0IBcyYUcE5VPrMr84ft9tvY0M3bfvUC3cksP7plLgunDS5a154e3A3r0fXrvfV/s2Z76//2mSWqqjzw8h7+8/61WCK8eX4Vb5o/kfEFx3YilarS0ZehviPBLl8c6zsS7O5I0NabZnZlHhdPLeGCyUWnraWYUxzzgBhjGDH0qW3p5YWd7Vw0qYjqwlHd2h89bP473H2DZw7t1n+goTjP1rbyrUc3smJHBxMKo9wwp5La5l5W7+pgT6fnkdy2hOnlucypKmDOhHzmTCigrTfNe+9aTjRo88u3zWd2Zf6gdZd1a9Ft2zz7oVUTsc4775DWXVQVVxl7ZuwMxwrzhzHGGNWd5ceKjOOyek8nJTkhJh7jFoDhANT9E+55nWdL9JaHWFqf5luPLeWFrW1U5kf4ymvP4sZoF9ZLy5CSEmR2OR3xQlYmg6zc08PqnR08+NJu7n5hx0CWU8vi3Pn286mM2bjr1uKuXQcd7RAOI2edhTVz1mGv6xMRbPO4MxhOG4wYAmsavPGZRVPMUooTwtYn4O7roXAKqxb/nm/etYFna1spyw3zxetn86b5VYTaWnHu+wcUFqLdXejOHeQBi0RYVFyMzCiDS2uoD+WxotUzTH7z9Dxy1q7A2bwJMhkoKcG6dJE3JniMrbsYDIaxhXlCAJMKY0QCNsUxs5TiuNLXCo99Elb8jGT+VD4W+ib3/2oTJfEQn3vlLG65YCKRoI0mkziPPwY5cexXvRoJh9FkEm1uQhsbobER3bwZ1q2jEqiMRiEeh/ubUctCamqwZs2GsjLzcmMwGA4LI4ZAYSxEoRHC44frwspfwGOfQJOdPF74Fu5ouJ5Qj82nrjuDWxdUE/M9gqgq7r+egr4+7Fdfj4S9maUSiSBVE8F3aaSuC+1taGMT2tiAdnVhzZvv2QWNmq5ug8EwMowYGo4ve1bCg++DXUtpK7mA/5d+Byubq3j/lVN55yWT9/P7qGteRrdvx7rwQqSs7IDZimVBcQlSXAKzZh3vWhgMhjGOsUBtOD4kO+GhD8JP5uG21fGbcV9kbv1n6S2Yyf23X8IdV0zbXwibmnCffx6pnoTMPvMkFdxgGF2IiCMiq0RkrYisFpGP+F4lEJHFItLpH+8PV+5z3RoR+WP/onkRCYhIs78Yf+h9nhSRjf49XhSRc0Tkh34e60QkMeQeN/rnzxty/SQRWTNMuTaIyH8POe9t/v2Hlvm4v/GalqHh2KIKL90Fj3wUepvYOfWtvHX79ezYEebDV07j/y2eQtDe/x1s6DihtWiRGeszGA6fhKqeAyAiZcDvgDwGvVc83b/A/iDX3QW8F/gWcBWwCXiDiHxK915/d4tvs/TtwDdV9Sr/+kl4fhEHDJWLyKF8Gh7MjdQ9J9onomkZGo4djWvgV5fBX28lm1fFt2t+y8K1NxKKF/O391/MB6+YNrwQDh0nvOKKgXFCg8EwMlS1CbgNuF1G9kb5NDDVj/cb/t4BXHiA85cwjEuoI0FVE3jWcY5JfkeKaRkajg7XhS1/93wP1j4CkUI2zv8mb199No29WT5w2RQ+cPk0QoEDv3cd7jihwXBq85Pj4sIJbhuRAXBVrfMd+vb/mBb6JtX6eb2q1vbv+B7srwMe9t09XQm8B88Y903Ac8Pc5lrg3pGU60AcwI3Um0TkkiH7F/qiedwwYmg4MhIdsOqX8MIPob0W4uNILfw832i9jJ8/08O0sjB/ufV85lQVHDQbM05oMBx3DtRNGh0ikk8DPweuB57wnf7+GficiHxIVfsN6d7lu3CKc2jhH8682dC0g7mROuHdpEYMDSOjaR288ANY/WvI9JKpvJCVUz7MXV3zeOKZdnpSPbx30RQ+dMW0Q7oNMuOEhrHFyFpwxwsRqQEcoAnP9dKBSAwd4/OvvQm4RES2+UnFeC6iHvX3bwGWA98Evg+87iD5twKFQ/aLgJYh+4frRuqEYMTQcGhcBzY96HWFbn0c1w6zoeSV/Dz9Sv6yrRzdCiXxTq6eXcEt50/k3ImFh8zyQOsJDQbDkSMipcCPgR+oqo7kBVNE8oCFeN4uUn7a2/G6SvvFED/fzwG1IjJDVTccIMsngbeIyGP+JJy3Ak/se9JhuJE6IRgxPN1QhY7tsONp2LMC0r2QTYKT8rYDYXBf+1qRRAudgTLust/Oz/qupG1HPnMm5HPH5WVcNr2Ms8bnY43EtVH/OOECM05oMBwl/d2dQSAL/AZvVmg/+44Z/peq/mmYfF4L/LNfCH3+BnxDRPZ6W/W7Uf8H+BiDfg735SfADGC173h4GZ5PxeH4MfBRf1Yq7D9m+D5VHW7s8phhvFaMdVwXWtbD9qc9Adz+L+jyXYsFYxDO9/wHBiJesAfjKQlR25ZhQ6vDY9nzWBK8hAunVXDZjDIWn1FGae6Rtea0oQHngfuRiROxrrradI8aRiPmj3aMYVqGoxlVcLPgZMBJD4bu3b7wPQ07noFEq3d+fJznN3DiQqi+FMrOBGv/WZ4tPSl++nQdv16ynVTW4YY547l1fhXfrS4cdmnEYRe3pwd3+XJ08yZ/nHCxEUKDwXBKYMRwNNC4Bv75Gah/YW/Rc9IHv65wCkx/tSd8ExdC0RQ4iPi09qT4yT4iePvlU5lSGj+q4msyibtqJbpunedTcPaZWOeea8YJDQbDKYMRw1OZzl3w5Odh1a8gnAczX+91bdpBsENesIbE+9MjhVB1EeRVHtZt2nrTvghuI5FxuGFOJbdfNo2pZUcpgpkM+vLLuC+thmwWmTYN67x5SPzo8jUYDIZjzUkRQ3/abjfe9N+sqs4TkSLgHmASsA14o6q2+1YUvgu8AugD3qaqK05GuU8YyU549huw5NugDiz4d1j4aYgVHdPbtPWm+enTddy5xBPB68+u5AOXHwMRdBx0w3rclSshkUCqJ2HNn48UHnqWqcFgMJwMTmbL8DJVHbrm5JPA46r6NRH5pL//CTzLCNP8cAHwI3879simYfn/wVNfhL4WOOtmuPzLUDgJzWa91tUROKlNZhy2tvQOhNrmHra29LKhoZtk1uHVZ1fywcunMrUs96iKr6po7RbcZcuguxvGjcO+6mqkvPyo8jUYDIbjzanUTXoDsNiP34m3RuUTfvqv/XUqS0WkQETGqeqek1LK44EqrPsTPPYpz5rLpMvg6m9C5XloRwfuc8+hmzZ6421Tp2LNmo0UF++VheMquzsS1LX0UueLXZ0vfvUde1sxqsiLUFOawxvnTeAtF1QzrXxkIqiqkExCRwfqBzo70LY26O2F4mKsa69DJkwwE2QMBsOo4GSJoQKP+GtP/k9VfwKUDxG4BqC/OTEe2Dnk2l1+2ugQQ9f11utl+iCb8LaZ/m2fN9Nzybe8yTFlZ8ItD6E1V6M7d6IPPYjW14PvvR3Lwt28Gd2wgZacQpZEynmkN0ptax/bWvtIZ92B2+ZGAtSUxDl/UhGTS3KoKc1hckkOk4pziIVsaGtDW1uhox63UwDxJteI+JPGh8QV6O72hK+zAzo6IDVkKZJtQ0EBUlHhmVWrqTEiaDCcIESkR1WHHdsQke8Ab8BbSO/6aW8DfgGco6ov+WlrgFep6rYhw1gANvAXvLWJySHeKc4UkcV4i+ivV9X7/XweAP5bVZ/0bZ5+0b9/r5/fH1X1y8ey/seKkyWGl6hqve9u5FER2cuCgW/hYEQLIEXkNjxr7UycOPHYlXQoThZ2LYW+Zki0QaIdku3eNtE2GO/fZvwF7Ycidzzc8AvcaTfSt24j9t13E0z00RsIsyxezcPZfDauzbK9rQ9SZdyY28stmS5eHWznItdmSV4pO6ZOpLy8iJrSOJOKcyiJhwYESV3XE789O9A1u3EaGvYWs8MlGvVEb3INUlgA+QVIQQHE40b8DIZTDN+n4WvxGhOL2Nv6yy7gM8CbDnD5ZaraIiJxvMXz/4dnQWZf+vO5f5hj/wVUAGf5QpoLfORI6nIiOCliqKr1/rZJRP4KnA809nd/isg4PLt6APVA1ZDLJ/hp++b5E7wvjXnz5h1bSwKqsOFerxuzdePex8SGaKE3gzNaBLFiKJqKBuKoHSFtRUlKhD4i9GiEHg3S5YToygbpzAZoywToShQyb0kHl754NxGB5xJhfttZxON9EUJBZXxhivEFUc6ekE9NaZzJJTnYxTHoaaVkwzpetXMnNDQi0clYE2ZDTgG0tODu2YPu2Y02NEDaX4aRm4tUVyPjKj3LL4GAV7+hob/OQ+PxuFkKYTCMLhYDa/EmJt7E3mL4AHCpiExX1Y3DXAuAqvaIyHuBnf4kx31ZDQRF5CpVHTDZ5jsKfjcwSVWTfl7dwBeOrkrHjxMuhiKSA1iq2u3Hr8ZrSt+H9+bxNX/7N/+S+/B8c/0eb+JM5wkdL9z+NDz6Cdi1BLd4BkvP+R477Wo6NIdWJ5fWTIjetENvKkt3KsO0RBevs1uZH/LG6QJ45t3jDPpTSbqQ0iwZHCBNid1NMmixJjaOXeMmkVNeygcLony9IEpBLHjgVldJHCZVo52duOvXoRs34tTVeQvpXb/LNC/fa8mNG+cFs6zBYDgu3HfzzOPiwun6360/UgPgNwF34z1LvyIiQVXN+Mdc4BvApxm+xTeAqnaJyFa8SYyNw5zyZeBLDLFfiucbcYcvgKOCk9EyLAf+6j/gA8DvVPVhEXkR+IOIvBPYDrzRP/8hvGUVW/CWVrz9hJSyaa3XEtx0P+RW0nr5D7ll+XQ2PO91e1qSJB7OEg8HyIvYXB7u43XBViYFE3RJkCdyJpKO5pAbEOIBiAWEmA1RCyIW5IpiqwuOi5SWkjNtGheEQkc0TVby87EXXIjOm49u2YK2tSFlZZ745eQc28/FYDCc8vhull4BfNhveDwPXIPXIuznd8BnfK8Rh8zyQAdU9V8iwj62RPctz9uBO/C8YFyJAXT3AAAgAElEQVSkqjsPdO7J4oSLoarWAXOGSW8FrhgmXYH3n4CieXTuhCc+D6vvhFAcrvgKz5e/hffesx5XHX75tvksmFxMJGiB46CbNnmLyru7IT8f6+z5FE6bxlX2wd0XHQ8kEEBmzDjh9zUYDHAULbjjwTV4znlf9hseMSDBEDFU1axvbPsTB8vIH+ubBGwC8g9w2peBz+IZCgev8TJRRHJVtVtVfwn80p+oc+IfjofBqbS04uSSaIenv+q5KUJhwYdg4af57cs9fOHOl6kujvGzf5vP5JIcNJVCV63FXbsWEgkoLcW6YIE3FjeMrU+DwWA4wdwEvEtV74aB4amt/ljeUH4FfBwYdn2VP4Hmf4F7fSMow4qhqj4iIl8Cxvn7fSLyc+AHIvIefwKNDYSOQd2OC0YMAZb/DB79mGf5Zc6tcNkXyeRW8cUH1vGbpdtZfEYp37vpXHI1i7N0CbphA2QyyIQqZM4crzvSzKY0GAwnh5iI7Bqy/7/AtcB7+xNUtVdEngFePfRCVU2LyPfwrHwN5Qnf+pcF/BVvTPBQfJnBuR7gzTL9ErBGRLrxWqZ3ArsPq1YnGOPCCWDFL2D9n+GKr0LF2bT3pnnf71awpK6V2xbW8PErp2KtW4u7aqVnBaZmCtacOfstfDcYDKcN5u13jGHEELylA37LbnNjN+/89TIaOpN85TVn8rrCFO4LL0BPD1JdjXX+Bd7aOoPBcDpjxHCMYbpJYUAIH1/fyB33rCIStLnvjdOYunU57somz7zYpYuwxo8/yQU1GAwGw/HAiCGerc0f/6uOb/xjA5dVRvje1CyR5/8JsRjWpYuQadPMxBiDwWAYwxgxBL769w387pkt/OgM5QpnG7IbZO5crLPnIMHgyS6ewWAwGI4zRgyBt5Sk+cCUFqKZDDLtDM/3nlmsbjAYDKcNRgyBCblBtLwEa8GFSEnJyS6OwWAwGE4wRgwBmTHTC2atoMFgMJyWGDEEI4IGg8FwmmOmSBoMBoPhtMeIocFgMBhOe0w3qcFgGBX0ZfrY2llHd7oLQbDEQsTCGhoXQbCwxKI0VkpprOzQGRsMGDE0GMY0GTdFR2oPAQlREK5A5NTvDOpJd7O1s466jjq2dtRS11lLXUctDb0j8+ltS4Abp7+Rd895LwWRwuNUWsNYwYihwTCG6Mt20Z6spy21i7ZkPV2Z5oFjIStGeayGsmgNZdHJBKyT602nK9VJXacveB21bPXjjX2DztTDdpjq/MmcWz6XyflTqCmooSBSBKq46uKiqLq46qKquHhxV12e3fU0f9p4Dw/U3sc7zn43b555C2E7fBJrbDiVMYa6DYZRiqpLV7qZtlS9F5L1JJ1uAGwJUhiupCgynqLweNJOgsZELU2JOjJuCgub4kgV5bEplEenEAseyGfr0dORbKeuo3ZA+LZ21lLbUUtromXgnEggyqS8SdQUTKWmoMbb5k9hXLwS2zoSX7Dec62uo47vL/82T+96ioqccdw+9w6unnwd1tG3kM0U9DGGEUOD4TijqnRnWujJtJEbLCEeLDyi7kpVpSvdREtyB63JnbQmd5LVNAARO05ReMKA+OWGSod94Lvq0JbaTWPfFhr7aunNtgOQGyyhPDaFovAEQnaUkBUhaEUIWuHDLquqUt+9iw1t69jQup6NbRvY2LaetmTbwDmxQIzJBVOoya/xtn6oyBl3LARqCM8A24GrgDKW7XmB7yz7bza0rWdW8WzumPcRzquYfzQ3MGI4xjBiaDAcBzJuipbEdpoSW2lKbB1osYHXassLlZIfKvdCuJzcYDGW7N0C6hfR1uTOAQHMuEkAcgKFFEeqKI5UURQZT9TOO6L1sj2ZNhr7amlM1NKW3IWy//MgICGCdpSgFR4QyYidS1DKqOvYxobW9WxoW8/G1g30ZPpbpgGmFE5letEMphZMo6ZgCpMLplAeKz8B63prgcfxRoEUuAyowVWXh+se5Icrv0djbwOXVi3mg+f9O5Pya47kJkYMxxhGDA1jnqyboS25i+bkNtqSu7AlSDSQRyyYTywwGCJ2/IgnmKgqXZlmmvq20pSooz21G8UlICFKo5MojU4mP1RKd6aVzlQjnelGOtNNOJoBwMImN1RKfqiMnGABnalGWpI7Sbt9AMQC+RRHJlISqaI4MpFoIPeYfT79pJ0kPZkWMm6KtJukM9XO7u569vTupqm3ica+Zlr62mhJtNPa10HGzQLeuN60wunMKJ7JjKKZTC+ewZSCaYTskzEm2Q38GSgArgYeBRqBecC5gJDMJvn9+t/yy5d/RjKb5HVn3Mh7znn/SCfZGDEcYxgxNJySuOrQlNhKZ6qBaCCfnGAhOYECwnbOIVsWqi6d6SaaE9toTm6nPVmPi4OFTWG4EsWlL9tJ0unZ6zrB8kTSF8egFQbEv5/4/wDpj3nb3mwHzYmtA/nlBUspi3mTVArDlfu1+AbLqfRm24eIoyeQGTdJxM4dEL6SyMTjOqbXX5ZHtj3MY9seYU9PPbt76ulKd+11TiwQozJ3PJXx8ZTFSokEk+RGYFrBbM4tvZbcUPFxLeOhcYEHgFbg9UAe4ABPAVuAacClgPd9tCVa+enqH/Ng7X384YZ7qYiPG8nNjBiOMYwYGk4pOtNN7OxZQ33P+oFW0VBsCQ4Io7ctJCdYQMiK0paqpzmxnZbk9oHuxLxgKaXRSZREqykOT8C2Bl1yOZolke2mL9tBIttFX7aTvkynt812euNx/u9D/X8M240YpjQ6ibLoZMqik4kE4kdcf1Ul4yYJWpETZiawoWcPX136JZ6tf5pxOZVMLqihMj5+v5Afzt+rTKrKzp41rGt/kqybZlr+BUzNX4BtnaxJ6iuAZcBi4Iwh6Qqs9I9V4LUYIwNHu1Kd5IVH/LJhxHCMYcTQcMzIumlELGwZ2cMw5fRR37uenT1r6Eo3IVhUxKZSFT+TkshEkk4PvZkOerPt9Gba6c120Jtppy/bieLulVfEjnviF6mmNFpN2D72rri834wOjK8J1qi0b+uqyx83/J4frvguLsr7z/0gb5xx04hnb6acXta2PUF973pyAoWcXXw1JdGJx6nUB6IRuA+YgjdGONz3UQs8CcSAa4GjWns4+r5ww0ExYmg4KCknxea2jQDEgjnk+CFoBejNttKRbqQj1UBnuoGejDdrMGLnErLipLLQl8nSk0rRmeqlI9VFc18zTb3eOrLxuRXkR0LEQi5lOflU5dYwMfcsxufMJGRHD1k2V10S2S56s+2knF4KQuOIB4tGpTCdaLZ21PGl5z7PS82rWFB5EZ+64LOUWnnY4Sh28MjG+poSW3m59VH6sp1Uxc9kVuHiw/oej5403jgheN2jByt/E/APvO7TK4EJR3pT80c2xjBiaNiLnnQ3q5tWsappBSsbV7C25WUybmbYc4NWgHAgSCQQJhaIkROKk8gkaU200p3u3e/8aCBEfjhOYbSArJuhsbeVrtRgV2hOMIcpBVO9UDiNKQVTqcgZR1e6i85Uhx866Ux10JFsp8OPd6Y6SWT7GB+fwOSCGmryp/izF2vIDeUdt89qtNC6/kXatqwm09tFqqeDzbtXsae5llhWKLfyCaazZPq6QZVQbiHn3PZfVJx3+RHdK+tm2Ny5hNrOFwlaYWYWLiIeLMLRLI5mcDSL6w7Gs26aZHMDfXWbwVUCOXGCOXkEcnIJ5uQRiucTCEWxJIAtNhYBgnaEqJ07ZPz4n3itvlfjdYMeim48QWwHLgZmHUlVjRiOMYwYjhFcdenJtNKZbiSZ7SFghQhaEUJWlKAd9teMeWHoeq6WvhaWNzzPssbnealpNXUdW1EUSyyq8iqYmF9GZW4BttiknDSuayGEgRCuWjiukMqm6c300JfpJRqMUZ5TQXmsnPKcCkqiJeSHc4iFgriapDfbQV+2g4CEmRCfRdgqZltnHVs6tlDbvpnaji3UdmymM9V5wLoKQl44j/xwAQXhAvLDBYTtMLu6d7K1cyspJzlwbmm0zBPIgilMzq9hcn4N+eECIoEIkUCEsO1tA4cxzqWqZN0sKSdJMpsk6W9B/VZznJxgjMCQccnDyTPlpOjJ9NCT7qYn3U1vppesm8VRB8d1fNFwcNTB9dOyfrwoUsyE3Com5FYRD+09Vpnp62Htb7/Gjif9VpNlkwxCj+0QjhcwsXwGsdySAdEJxvLY+cx9dG1fz6SrbmL2LR/HDkWGKfWh6Uo3sbrlETrSe5tQU1ehsR22NcC2Rm/bnTh4ZgEboiGIhr1gW95YrquERYiISzojOI6NKOD6x3ILKbv4akouWIzEImTdDI6myboZXE1SFqsjHuyhOZFHfujVhEbWpW7EcIxhxHAEqCq9mR5aEi20JVppS7bS6m/bEq20JltpS7TRlmylI9lO0A4SCUSJBWJEA1GiQX/r78f8fVddktkkKSdFMpvYK+5tvQev9yP2zVCp95D0tq5vkmpwHMsSz3jxvltBsMXCtmwyrkNbwhOdgGVTlVfKxPwyJhVUMq2whvxwMbFAHtFAnr8ursJffnB8nwOqSmuyldr2zTQnmskL5Q2IXn64gNxQ7gHHtVx12dOzm62dddR2bPFNfdWxtbOWRPbAD92AFRgQxogdIRyIgKoveIPfg6POIcsfskLkhOIDreWcQIxYMIeQHaI300NPuofudPeAAB6o5T1S8sMFTMitYnx8AlPaoOSRp5GuTsqvfiNLpgT4Xe0fKImV8skFn+PSqsXD5uFk0mz4w3eoffCX5E6Yynm3/w95E88Y9txDoerS1FNHz7ZN9GxZT/emtXRtfplsnzfrNlJUTtGMeZTMmEfR9LnYochA6zXd0+5teztI93aS6ekk09tFprcLx0l7f+eWQyyUwrFsOrOCg+v54bEELMsT3d2tnpieOQnOOwMmVyCW9/crwOyiGNW5AVLZq4kGJ4+kekYMxxhGDPHGOlqTO+lOd9HS10JLXystiVbaEh20JTtoT3bSkeymM9VN2snud70g5ISi5IZyyAvHyQvlkhvKwVGXtJMh5aS9kE2THhLvT7fEImQFCNkhQnZwr23YDvn7IQQlq0kybgoRfGELELZjhO0cIoEconacgBUi62ZIu2kyTpqMmybr+lvNknUzZJ0MCEwtrOGs0rOYVXIm+aFiooE8QlZszI27uerS1Nvoez3oHmjdDfcCkvSFzxIhEogStsN7tSL7xbI/Dkpvpo++TC+9mZ794v2t5rSbIR6MEw/FiQdzyQ3levFQLvFg3N/P9cdkg9iWje13D9qWNzHJS7OxrQACtCRa2NW9k/ruXezq3klD23bGL3mZmXXdtOTA3860qS/wvssbp7+J2+d+aL8W5HA0rX6GlT/+FJm+Lmbd/DEmX33LiP4mOretZ9ujd7PruQdx/K7w+LjJFM04j+IZ8yieMY9oSeVR/J25eBNmOvDGCXNRVdJuH319bSQ2r8NJdJPMDdH2wtO0LHkCJ9FLtGw84xfdQNWlryFeNN5fV9qBty5xRIytH4jBiCHAV5Z+kge3PELK2fsNXYC8cJzCSAHF0UKKo0UURQvJC8XJDcWIh3OIhyLEgmFA/W6s7ECr7XBRVRSvdaee6eGBuKuD+0ErQn6ojPxw+YD1klggf8wJl+HIaF3/Iiv/7zP0Ne9i8rW3kv+KN7A71UR99y6mF83gzNKzR5RfqrOVVT/5DI0rn6LsnEs59z1fIZx/4LWETjrFrn/+mW2P3k3nni1YYlMSLKPQKiIvWEAoEEEsC8QCkYEWXH+aVViAPa4Cu8IP5eVYZWWIPVwvwDJgBdnGs8is6CCzYSOZjRvJbNxEtq4Osv7vLxImdO65BOafR0exxZ76l2jduByxbMrOuZSJi19P+TmXYgUOv2vbx/zoxhhGDIHHtz3CisbllOWUUx6roCKngvKcCkpjpSMa/zEYTgbZVIIN93ybun/8llhZFee+58sUz5h3TPJWVbY98jvW/u4bBGN5nPver1I6fR7ZrVvJ1G0lW1dH98aX2d3wMs1WO9kAhPtcSndnKGpRwhWVSCgMrguu98Lnjel5+6j3okfWwe3oGBSxfiwLq6x0UCArKrDLXXLfX03fX9fQfse9A6dmqqfQMGEuO3MmsT2RR3u3S9hNEkp0EeppJ+IkCGuaWLlFTlkbltSi2R7sWBELPvkziqfOHMlHY8RwjDFqxFBErgW+i2c+4meq+rUDnXs6TqA5mbiu4mQcXMfFdRR11Ru/dIcEVdyBfQD1WrQiXpeviN9g8NJAoa8PTSaQvHzUsr3rncF8XMcdkqdiB20CIT/sE+8fJxoO1cH8nKy/dVxvsof2ryv0iqTef/51fiIMUxcvPjQNvAkkw5Xf+9wG9y3bwrIFK2Bh29ZeW8sW7ICFZVu0b17Fyh9/it6G7Uy++hZmvvnDBCKxA9ZxoK7+97BvmlcXEEvQ7m7cHdtwtm2nc/0yNtU+SkL7KN2VoXJbmu7iMM2VAbr99eqFudWUT1tIweyFWJWVSGERKtZAft7Wi1sWiOjAvlieumhHF25zK9rUjNvYiNuwB6dhD25DA05DA25fB2X33gISYPudwnanku0dIXbs6KV5dzeqXn4lFXHyCqNkMw6ZjEMm6ZBOpkknMqRSLq6C4FAS2UZFbCOv/Mh/ULXw3JH82RsxHGOMCjEUERvYhGeCfhfwInCTqq4b7vyRimGqL0M6kcHJOripDE5fEieVwk2mcJNpnHQWN5PFzTq4joMrAdSyUMtGxfICgoqFi6AqKGBZMvDgsgM2VtAmEApghQIEArb3gAtYgw9O+h+gQ+JeFEFQVZys6wcHN+uSzXhbJ+vgZNyBB6zt520P3MfGDg6m2cEMwXA3rmujjuC6Fm5WcBwLdcDJWt6Luwuu693THbi3v58ZIhr70P+AdRzF8UXS2/qC4w4RHle9vPc6Twfytn0h6K+TZcvgvm1hB8QTD0v8B61nQs2yQGzBtpVgEIIRCAUVVwUnC9kMOBkhm/W+M1BU8YMOml7r12eGiN0QoQPvhcDNZnCdBOKmwEmgbhLcBOqkwE2BZsCysawg2EHECiBWELG9YPkBsby80imcdBI3k/JCOoWb8fY1m8LpaSK940msWAnRc24jWDLL/+w9QwSK65dPUc2ipBArjVgZrECGQDBDIJglEHYIhR3CMRfLUtIpi0zSJpuxyGYCOJkArhPATUPv6r+Tqn0arAC4WaxYPrkzz6fw7HOJFucQimQJR7OEYw7hmEMk5nIkHphcF5wsOFlBXXAcQR0hEFJCUZcffzzMuhc9jx2BoEVpZS6V1flUTS1k4rRiYoUx7IBNNp3GSWXIprNk0w7ZjJJJu6SSLumUSzqVJZNyWPiqanLHl4+kiEYMxxijxbnv+cAWVa0DEJHfAzcAw4rhSKn/+/20hg7URRIEgggZLHGwglksHEQyWCQRyWLjIDhYfhDLQXBx1cbNhnAyQbIaxCWEo0EcP360vychgy0ZbDJYksaWDKuWtLLihe69zuq3kzKUWRe4vOuLB58Z6TqeYGQz+K25Q6P7RU4Q/gRC2wbLD/YI/rpdx++5c8BxvO3h1HnD7x6jcdlG3EwWdQ7zQzpGWEGb6ivOZPbNlxKI9uGNo40Mx4Fkj5LshXSf4joQzxdC0QzhqBCOeZ/rADfOo2F5Ibtf2EzFeVOomFuDFbCBDD2dHfR0QE8HNOz0tolur/VpWYol6n1H/pChbXl5W5b3cqMILl4v6sCfj4X/p+silve9rlsqZDrSXHNliqnVPUyu7CAUSA6+PGbw1tYPR8ALGgWHEI5GyJJDrOAdI/7sDGOL0SKG44GdQ/Z3ARcMPUFEbgNuA5g4cWSmoIpzMuS1P4xYihUQbFuQgN8VFfRadFYoBMEQEgh4LSHXRR31n56u9yB0XXC8oNks6jqI46Bu1n/aOuBmUdcFzeK4FoqFi/d00EFT0Ch+n9IQMRN1ETeLrRkszSCqXotGAX/ba8dgot9NNtCy1CH7gis2oaTFo9/3WlV2wCXgNVawA2AH1U8HKyjYwcGsDqpxKogolt+S6u8KsyywRAfSLFHEFqyAjRUM+J9x0OsWtPFbdYNdjTp0iMn/iN2sg5vKeq32dBY34wx+xEOC44A6XkuwX+S87kdBAvjfNVgB/94DYqogA6ZJQWWgW3QwDaxIOQXTbcQKgB3wW3sBLNtv9fn7YgcRbG8JjOv4XaIO6jp+K9qP++Nqlh3ACgawg0GsgLe1gwEvHrCxba/Fj8K2J7IwZMKWDPNFiWsRwMa2woRDMcLRPELxQqx4CZF4HtG8XKQi5k1m2ftLJZtJkujtIdXXSzrRRyY2l/xL0iSIsG1DBCGIjUUoqATtLOX5WSYUZQjaaSzNgBWEQATsCNhhPx4eCDKCpmM243DeFV7XK24asknIJvzgxx0/7joQCO9/30AEsSNYdpjgCO9vGLuMlm7SG4FrVfVd/v6twAWqevtw55sxQ4PBcJwx3aRjjGPpWvp4Ug9UDdmf4KcZDAaDwXDUjBYxfBGYJiKTRSQEvBlvxa3BYDAYDEfNqBgzVNWsiNyOZ13XBn6hqmtPcrEMBoPBMEYYFWIIoKoPAQ+d7HIYDAaDYewxWrpJDQaDwWA4bhgxNBgMBsNpjxFDg8FgMJz2GDE0GAwGw2mPEUODwWAwnPYYMTQYDAbDaY8RQ4PBYDCc9hgxNBgMBsNpz6gw1D1SRKQZ2D7Cy0qAluNQnJOBqcupianLqcmR1KVFVa89HoUxnBzGpBgeCSKyTFXnnexyHAtMXU5NTF1OTcZSXQxHjukmNRgMBsNpjxFDg8FgMJz2GDEc5CcnuwDHEFOXUxNTl1OTsVQXwxFixgwNBoPBcNpjWoYGg8FgOO0xYmgwGAyG054xLYYi8gsRaRKRNUPS5ojIEhF5WUTuF5E8Pz0kIr/001eLyOIh15znp28Rke+JiIziujwpIhtFZJUfyk5wPapE5AkRWScia0XkDj+9SEQeFZHN/rbQTxf/M98iIi+JyNwheb3VP3+ziLz1RNbjONTFGfKd3DcK6jLD/9tLichH98nrWv9vbIuIfHKU12Wb/ztaJSLLTnRdDCcQVR2zAbgUmAusGZL2IrDIj78D+JIffz/wSz9eBiwHLH//BWABIMDfgetGcV2eBOadxO9kHDDXj+cCm4BZwDeAT/rpnwS+7sdf4X/m4n8Hz/vpRUCdvy3044WjsS7+sZ6T9Z0cYV3KgPnAl4GPDsnHBmqBGiAErAZmjca6+Me2ASUn87sx4cSEMd0yVNV/AW37JJ8B/MuPPwq83o/PAv7pX9cEdADzRGQckKeqS9X7dfwaeM3xLvu+HIu6nIBiHhJV3aOqK/x4N7AeGA/cANzpn3Yng5/xDcCv1WMpUOB/J9cAj6pqm6q249X/hFoEOYZ1OemMtC6q2qSqLwKZfbI6H9iiqnWqmgZ+7+dxwjiGdTGcRoxpMTwAaxn8cb4BqPLjq4HrRSQgIpOB8/xj44FdQ67f5aedCoy0Lv380u/2+dzJ6PLtR0QmAecCzwPlqrrHP9QAlPvx8cDOIZf1f/4HSj8pHGVdACIiskxElorICX/ZGsph1uVAjMbv5WAo8IiILBeR245LIQ2nBKejGL4DeJ+ILMfrQkn76b/A++EuA74DPAc4J6WEh8+R1OUWVT0LWOiHW09oiX1EJA78GfiQqnYNPea3wEfNmp9jVJdq9UyC3Qx8R0SmHPuSHhrzvezHJao69/+3d68hVlVhGMf/T6apg5AXKEG6UVEZpKQgGlKkA4aUhFBRWCF96mIGFpJ0gQIhCiuNrlAfzKQoMvugJoSUilqpqalldFEkC8pLRGa9fVjvYc4Mjo7HmTMznOcHmzln773W3mvvc+Zlrb3OWsAU4F5JEzv/TK0naLhgGBE7I6I5Iq4GllCebxARxyJidkSMioibgLMpzxr2ASOqshiR67pdDWUhIvbl38PA25RmrbqS1JfyT2pxRLyfq3+pNBnm3wO5fh+ta7WV69/e+rrqpLJU35fvKc91R3f5ybdximVpT2+8L+2qui8HgA/ohu+L1UfDBcNK70lJZwDzgJfz/UBJTfl6MnAsInZks8ohSeOySXEG8GH3nH1rp1qWbDYdluv7AlOBbcfNvOvOWcAbwDcR8VzVpmVApUfonbRc42XAjOyJOQ44mPdkBdAsaXD2CmzOdXXTWWXJMpyVeQ4DJgA76lKIVENZ2rMRuETShZL6AbdmHnXTWWWR1CRpUOU15TNW1++L1VF39+DpyoVSW9pPeTC+F5gJzKLUknYD82kZhecCYBflYfsnlGarSj5jKF+CPcDCSpreVhagidKzdCvleePzQJ86l+MaSvPUVmBzLjcAQ4HVwLd5zkNyfwGL8tp/TVVPWEoz8Xe53N0N96RTygKMz/db8u/MXlCWc/NzeIjSQWsvpaMZmW53lvPR3loWSo/YLbls746yeKnf4uHYzMys4TVcM6mZmVlbDoZmZtbwHAzNzKzhORiamVnDczA0M7OG52BoPYakIzWmGyPphXa2/VD5bWUN+U6TdMVx1k/OWQ6U7/tI+krS+FqOY2bdz8HQer2I2BQRD3RB1tMog563Pd4q4EfKbz0B7gc2RcTaWg8k6cxa05rZ6XMwtB5H0rUq8y6+J2mnpMVVtbCxktaqzNO4QdKg3H95bh8qaaXKPHavU37oXsn3jkyzWdIrkvrk+iOSns4810s6J2t5NwLP5P5txwqdDcyVNBK4D3hEUnPWGL+U9G6OjYmkxyRtlLRN0qtVZflU0gKVefJmde1VNbMTcTC0nmo08CClZnYRMCGH91oKzIqIq4BJwF9t0j0OfBYRIyljSZ4HIOly4BZgQkSMogxcfnumaQLWZ55rgHuylrcMmBNljNc91QeJMiTcAmAd8BTluzQPmBRlYOdNwEO5+8KIGBsRVwIDKMPgVfSLiDER8WytF8rMTp+bZqyn2hARewEkbaYMMXcQ2MC8lesAAAFdSURBVB9l7jkiZyJQ61moJgI35/aPJf2e66+nTGW1MfcfQMtAzUeB5fn6C2ByB89xETA/It6UNJUSuD/P/PtRAiXAdZIeBgZSJiPeDnyU25Z28Fhm1oUcDK2n+rvq9b+c/mdVwFsRMfc42/6JlnEJO3ysiPhPUiWdKJMN39bqoFJ/4CXKOKQ/S3oC6F+1y5+nUAYz6yJuJrXeZBcwXNJYgHxe2DZwraHMCYikKcDgXL8amF4108cQSeef5HiHKfNEdsR6SlPuxZl/k6RLaQl8v+UzxOkdzM/M6sjB0HqNiDhKee73oqQtwCpa17IAngQmStpOaS79KdPuoDzTWylpa6YdfpJDvgPMyZ9NnHCy3Yj4FbgLWJL5rwMui4g/gNcos56soExxZGY9jGetMDOzhueaoZmZNTwHQzMza3gOhmZm1vAcDM3MrOE5GJqZWcNzMDQzs4bnYGhmZg3vf/q46NeylrcxAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 470.75x360 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"S1MKNQP4aeua"},"source":["## Lab Exercise 2\n","\n","*Categorical Plots*\n","\n","Now let's create a bar chart to show the number of incidents by state.  \n","\n","Suggested Steps\n","\n","1.   Group by `State` and `count()` the number of `Record ID`.  Use `as_index=False` to return a dataframe and store this in a new dataframe variable.\n","2.   In the new dataframe, rename the `Record ID` count field to `# of Incidents`.  Use `inplace=True` to \"save\" the changes to your new dataframe.\n","3.   Sort the values inplace by `# of Incidents`.\n","4.   Use `sns.catplot` with `kind=\"bar\"` to plot a bar chart with # of incidents on the x-axis and state on the y-axis.  The `data` argument can be set to your new dataframe with `.head(10)` to get the top 10 states.\n","5.  If you want all the bars to be the same color, you can use `color=\"teal\"` or [another color](https://i.stack.imgur.com/lFZum.png) in place of teal.\n"]},{"cell_type":"code","metadata":{"id":"gtZ8_PMnTBbY","colab":{"base_uri":"https://localhost:8080/","height":203},"executionInfo":{"status":"ok","timestamp":1632284482147,"user_tz":420,"elapsed":128,"user":{"displayName":"Elizaveta Sergeeva","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13911837901844970628"}},"outputId":"425d13ed-7220-40be-fa48-392918b2f19e"},"source":["state_incidents = strikes.groupby(by=[\"State\"], as_index=False)[\"Record ID\"].count()\n","state_incidents[\"# of Incidents\"] = state_incidents[\"Record ID\"]\n","state_incidents = state_incidents.drop(columns=\"Record ID\")\n","state_incidents.head(5)"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>State</th>\n","      <th># of Incidents</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>AB</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AK</td>\n","      <td>1010</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>AL</td>\n","      <td>1414</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AR</td>\n","      <td>837</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>AZ</td>\n","      <td>2455</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  State  # of Incidents\n","0    AB              47\n","1    AK            1010\n","2    AL            1414\n","3    AR             837\n","4    AZ            2455"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"VoDnxqnwuf92","executionInfo":{"status":"ok","timestamp":1632284440399,"user_tz":420,"elapsed":468,"user":{"displayName":"Elizaveta Sergeeva","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13911837901844970628"}},"outputId":"8ea7ac6f-9f8f-4634-b1b1-c5899edb1e56"},"source":["sns.catplot(data=state_incidents.head(10), x=\"# of Incidents\", y=\"State\", color=\"teal\", kind=\"bar\")"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f5e3406b710>"]},"metadata":{},"execution_count":24},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"9r3K3VTiFJ_z"},"source":["## Lab Exercise 3\n","\n","Time permitting, formulate your own questions about the data set and explore the data through new visualizations.  You can use the `seaborn` Gallery for inspiration for different types of potential charts.\n","\n","http://seaborn.pydata.org/examples/index.html\n","\n"]},{"cell_type":"code","metadata":{"id":"h4yDQuOn8qoY"},"source":[""],"execution_count":null,"outputs":[]}]}